/* This file is autogenerated by scripts/decodetree.py.  */

#include <iostream>
#include <cstdlib>
#include "./disassmbler.h"



    static inline uint32_t extract32(uint32_t value, int start, int length)
    {
    	assert(start >= 0 && length > 0 && length <= 32 - start);
    	return (value >> start) & (~0U >> (32 - length));
    }

    static inline int32_t sextract32(uint32_t value, int start, int length)
    {
    	assert(start >= 0 && length > 0 && length <= 32 - start);
    	return ((int32_t)(value << (32 - length - start))) >> (32 - length);
    }

    static inline uint32_t deposit32(uint32_t value, int start, int length,
                                 uint32_t fieldval)
    {
    	uint32_t mask;
    	assert(start >= 0 && length > 0 && length <= 32 - start);
    	mask = (~0U >> (32 - length)) << start;
    	return (value & ~mask) | ((fieldval << start) & mask);
    }
    
    static void decode_extract_format_0(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_1(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[0] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[1] = extract32(insn, 10, 5); //rk
    info->nb_opnds = 2;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_10(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->srcs_fregs[1]  = extract32(insn, 10, 5);//fk
    info->opnds[2] = extract32(insn, 10, 5); //fk
    info->nb_opnds = 3;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 2;
}

static void decode_extract_format_11(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 1;
}

static void decode_extract_format_12(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_13(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 1;
}

static void decode_extract_format_14(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_fcsr = extract32(insn, 0, 5); //fcsr
    info->opnds[0] = extract32(insn, 0, 5); //fcsr
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_15(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_fcsrregs[0]  = extract32(insn, 5, 5);//fcsr_1
    info->opnds[1] = extract32(insn, 5, 5); //fcsr_1
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 1;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_16(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_cfreg = extract32(insn, 0, 3); //cd
    info->opnds[0] = extract32(insn, 0, 3); //cd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 1;
}

static void decode_extract_format_17(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_cfregs[0]  = extract32(insn, 5, 3);//cj
    info->opnds[1] = extract32(insn, 5, 3); //cj
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 1;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_18(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_cfreg = extract32(insn, 0, 3); //cd
    info->opnds[0] = extract32(insn, 0, 3); //cd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_19(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_cfregs[0]  = extract32(insn, 5, 3);//cj
    info->opnds[1] = extract32(insn, 5, 3); //cj
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 1;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_2(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[2] = extract32(insn, 10, 5); //rk
    info->sa = extract32(insn, 15, 2); //sa2
    info->opnds[3] = extract32(insn, 15, 2); //sa2
    info->nb_opnds = 4;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_20(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->si = sextract32(insn, 10, 12); //si12
    info->opnds[2] = sextract32(insn, 10, 12); //si12
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_21(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->ui = extract32(insn, 10, 12); //ui12
    info->opnds[2] = extract32(insn, 10, 12); //ui12
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_22(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->csr = extract32(insn, 10, 14); //csr
    info->opnds[1] = extract32(insn, 10, 14); //csr
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_23(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->csr = extract32(insn, 10, 14); //csr
    info->opnds[2] = extract32(insn, 10, 14); //csr
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_24(LoongArchInsInfo *info, uint32_t insn)
{
    info->code_2 = extract32(insn, 0, 5); //code_2
    info->opnds[0] = extract32(insn, 0, 5); //code_2
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->si = sextract32(insn, 10, 12); //si12
    info->opnds[2] = sextract32(insn, 10, 12); //si12
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_25(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->level = extract32(insn, 10, 8); //level
    info->opnds[2] = extract32(insn, 10, 8); //level
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_26(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[0] = extract32(insn, 5, 5); //rj
    info->seq = extract32(insn, 10, 8); //seq
    info->opnds[1] = extract32(insn, 10, 8); //seq
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_27(LoongArchInsInfo *info, uint32_t insn)
{
    info->nb_opnds = 0;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_28(LoongArchInsInfo *info, uint32_t insn)
{
    info->level_3 = extract32(insn, 0, 15); //level_3
    info->opnds[0] = extract32(insn, 0, 15); //level_3
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_29(LoongArchInsInfo *info, uint32_t insn)
{
    info->op = extract32(insn, 0, 5); //op
    info->opnds[0] = extract32(insn, 0, 5); //op
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[2] = extract32(insn, 10, 5); //rk
    info->nb_opnds = 3;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_3(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[2] = extract32(insn, 10, 5); //rk
    info->sa = extract32(insn, 15, 3); //sa3
    info->opnds[3] = extract32(insn, 15, 3); //sa3
    info->nb_opnds = 4;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_30(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->srcs_fregs[1]  = extract32(insn, 10, 5);//fk
    info->opnds[2] = extract32(insn, 10, 5); //fk
    info->srcs_fregs[2]  = extract32(insn, 15, 5);//fa
    info->opnds[3] = extract32(insn, 15, 5); //fa
    info->nb_opnds = 4;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 3;
}

static void decode_extract_format_31(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_cfreg = extract32(insn, 0, 3); //cd
    info->opnds[0] = extract32(insn, 0, 3); //cd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->srcs_fregs[1]  = extract32(insn, 10, 5);//fk
    info->opnds[2] = extract32(insn, 10, 5); //fk
    info->nb_opnds = 3;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 2;
}

static void decode_extract_format_32(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_fregs[0]  = extract32(insn, 5, 5);//fj
    info->opnds[1] = extract32(insn, 5, 5); //fj
    info->srcs_fregs[1]  = extract32(insn, 10, 5);//fk
    info->opnds[2] = extract32(insn, 10, 5); //fk
    info->srcs_cfregs[0]  = extract32(insn, 15, 3);//ca
    info->opnds[3] = extract32(insn, 15, 3); //ca
    info->nb_opnds = 4;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 1;
    info->num_sccrach = 0;
    info->num_fsrcs = 2;
}

static void decode_extract_format_33(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->si = sextract32(insn, 10, 16); //si16
    info->opnds[2] = sextract32(insn, 10, 16); //si16
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_34(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->si = sextract32(insn, 5, 20); //si20
    info->opnds[1] = sextract32(insn, 5, 20); //si20
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_35(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->si = sextract32(insn, 10, 14); //si14
    info->opnds[2] = sextract32(insn, 10, 14); //si14
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_36(LoongArchInsInfo *info, uint32_t insn)
{
    info->hint = extract32(insn, 0, 5); //hint
    info->opnds[0] = extract32(insn, 0, 5); //hint
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->si = sextract32(insn, 10, 12); //si12
    info->opnds[2] = sextract32(insn, 10, 12); //si12
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_37(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->si = sextract32(insn, 10, 12); //si12
    info->opnds[2] = sextract32(insn, 10, 12); //si12
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_38(LoongArchInsInfo *info, uint32_t insn)
{
    info->hint = extract32(insn, 0, 5); //hint
    info->opnds[0] = extract32(insn, 0, 5); //hint
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[2] = extract32(insn, 10, 5); //rk
    info->nb_opnds = 3;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_39(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_freg = extract32(insn, 0, 5); //fd
    info->opnds[0] = extract32(insn, 0, 5); //fd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[2] = extract32(insn, 10, 5); //rk
    info->nb_opnds = 3;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_4(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->srcs_regs[1]  = extract32(insn, 10, 5);//rk
    info->opnds[2] = extract32(insn, 10, 5); //rk
    info->nb_opnds = 3;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_40(LoongArchInsInfo *info, uint32_t insn)
{
    info->hint = extract32(insn, 0, 15); //hint_4
    info->opnds[0] = extract32(insn, 0, 15); //hint_4
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_41(LoongArchInsInfo *info, uint32_t insn)
{
    info->hint = extract32(insn, 0, 15); //hint_5
    info->opnds[0] = extract32(insn, 0, 15); //hint_5
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_42(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[0] = extract32(insn, 5, 5); //rj
    info->offs = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 5)); //offs2
    info->opnds[1] = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 5)); //offs2
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_43(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_cfregs[0]  = extract32(insn, 5, 3);//cj
    info->opnds[0] = extract32(insn, 5, 3); //cj
    info->offs = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 5)); //offs2
    info->opnds[1] = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 5)); //offs2
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 1;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_44(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->offs = sextract32(insn, 10, 16); //offs1
    info->opnds[2] = sextract32(insn, 10, 16); //offs1
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_45(LoongArchInsInfo *info, uint32_t insn)
{
    info->offs = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 10)); //offs3
    info->opnds[0] = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 10)); //offs3
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_46(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[0] = extract32(insn, 5, 5); //rj
    info->dst_sccrach = extract32(insn, 0, 2); //sd
    info->opnds[1] = extract32(insn, 0, 2); //sd
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_47(LoongArchInsInfo *info, uint32_t insn)
{
    info->sccrach_regs[0]  = extract32(insn, 5, 2);//sj
    info->opnds[0] = extract32(insn, 5, 2); //sj
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[1] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 1;
    info->num_fsrcs = 0;
}

static void decode_extract_format_48(LoongArchInsInfo *info, uint32_t insn)
{
    info->ptr = extract32(insn, 5, 3); //ptr
    info->opnds[0] = extract32(insn, 5, 3); //ptr
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_49(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_5(LoongArchInsInfo *info, uint32_t insn)
{
    info->code = extract32(insn, 0, 15); //code
    info->opnds[0] = extract32(insn, 0, 15); //code
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_50(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[0] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 1;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_51(LoongArchInsInfo *info, uint32_t insn)
{
    info->si = sextract32(insn, 10, 5); //si5
    info->opnds[0] = sextract32(insn, 10, 5); //si5
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[2] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_52(LoongArchInsInfo *info, uint32_t insn)
{
    info->cond = extract32(insn, 10, 4); //cond_1
    info->opnds[0] = extract32(insn, 10, 4); //cond_1
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[2] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_53(LoongArchInsInfo *info, uint32_t insn)
{
    info->cond = extract32(insn, 10, 4); //cond_1
    info->opnds[0] = extract32(insn, 10, 4); //cond_1
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[1] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_54(LoongArchInsInfo *info, uint32_t insn)
{
    info->srcs_regs[0]  = extract32(insn, 10, 5);//rk
    info->opnds[0] = extract32(insn, 10, 5); //rk
    info->srcs_regs[1]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->cond = extract32(insn, 0, 4); //cond_2
    info->opnds[2] = extract32(insn, 0, 4); //cond_2
    info->nb_opnds = 3;
    info->num_srcs = 2;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_55(LoongArchInsInfo *info, uint32_t insn)
{
    info->cond = extract32(insn, 10, 4); //cond_1
    info->opnds[0] = extract32(insn, 10, 4); //cond_1
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_56(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 3); //ui3
    info->opnds[0] = extract32(insn, 10, 3); //ui3
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[2] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_57(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 4); //ui4
    info->opnds[0] = extract32(insn, 10, 4); //ui4
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[2] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_58(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 3); //ui3
    info->opnds[0] = extract32(insn, 10, 3); //ui3
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_59(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 4); //ui4
    info->opnds[0] = extract32(insn, 10, 4); //ui4
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_6(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->ui = extract32(insn, 10, 5); //ui5
    info->opnds[2] = extract32(insn, 10, 5); //ui5
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_60(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 5); //ui5
    info->opnds[0] = extract32(insn, 10, 5); //ui5
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_61(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 6); //ui6
    info->opnds[0] = extract32(insn, 10, 6); //ui6
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->nb_opnds = 2;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_62(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 8); //ui8
    info->opnds[0] = extract32(insn, 10, 8); //ui8
    info->op = extract32(insn, 5, 5); //bt_op
    info->opnds[1] = extract32(insn, 5, 5); //bt_op
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[2] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 3;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_63(LoongArchInsInfo *info, uint32_t insn)
{
    info->ui = extract32(insn, 10, 8); //ui8
    info->opnds[0] = extract32(insn, 10, 8); //ui8
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[1] = extract32(insn, 0, 5); //rd
    info->nb_opnds = 2;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_64(LoongArchInsInfo *info, uint32_t insn)
{
    info->offs = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 5)); //offs2
    info->opnds[0] = deposit32(extract32(insn, 10, 16), 16, 16, sextract32(insn, 0, 5)); //offs2
    info->nb_opnds = 1;
    info->num_srcs = 0;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_7(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->ui = extract32(insn, 10, 6); //ui6
    info->opnds[2] = extract32(insn, 10, 6); //ui6
    info->nb_opnds = 3;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_8(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->msb = extract32(insn, 16, 5); //msbw
    info->opnds[2] = extract32(insn, 16, 5); //msbw
    info->lsb = extract32(insn, 10, 5); //lsbw
    info->opnds[3] = extract32(insn, 10, 5); //lsbw
    info->nb_opnds = 4;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

static void decode_extract_format_9(LoongArchInsInfo *info, uint32_t insn)
{
    info->dst_reg = extract32(insn, 0, 5); //rd
    info->opnds[0] = extract32(insn, 0, 5); //rd
    info->srcs_regs[0]  = extract32(insn, 5, 5);//rj
    info->opnds[1] = extract32(insn, 5, 5); //rj
    info->msb = extract32(insn, 16, 6); //msbd
    info->opnds[2] = extract32(insn, 16, 6); //msbd
    info->lsb = extract32(insn, 10, 6); //lsbd
    info->opnds[3] = extract32(insn, 10, 6); //lsbd
    info->nb_opnds = 4;
    info->num_srcs = 1;
    info->num_fcsr = 0;
    info->num_cfreg = 0;
    info->num_sccrach = 0;
    info->num_fsrcs = 0;
}

bool decode(LoongArchInsInfo *info, uint32_t insn)
{
    switch ((insn >> 26) & 0x3f) {
    case 0x0:
        /* 000000.. ........ ........ ........ */
        switch ((insn >> 22) & 0xf) {
        case 0x0:
            /* 00000000 00...... ........ ........ */
            switch ((insn >> 18) & 0xf) {
            case 0x0:
                /* 00000000 000000.. ........ ........ */
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00000000 0....... ........ */
                    switch ((insn >> 10) & 0x1f) {
                    case 0x2:
                        /* 00000000 00000000 000010.. ........ */
                        decode_extract_format_46(info, insn);
                        switch ((insn >> 2) & 0x7) {
                        case 0x0:
                            /* 00000000 00000000 000010.. ...000.. */
                            /* ./loongarch.decode.2:429 */
                            info->opc = OPC_GR2SCR;
                            return true;
                            break;
                        }
                        break;
                    case 0x3:
                        /* 00000000 00000000 000011.. ........ */
                        decode_extract_format_47(info, insn);
                        switch ((insn >> 7) & 0x7) {
                        case 0x0:
                            /* 00000000 00000000 00001100 0....... */
                            /* ./loongarch.decode.2:430 */
                            info->opc = OPC_SRC2GR;
                            return true;
                            break;
                        }
                        break;
                    case 0x4:
                        /* 00000000 00000000 000100.. ........ */
                        /* ./loongarch.decode.2:52 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CLO_W;
                        return true;
                        break;
                    case 0x5:
                        /* 00000000 00000000 000101.. ........ */
                        /* ./loongarch.decode.2:53 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CLZ_W;
                        return true;
                        break;
                    case 0x6:
                        /* 00000000 00000000 000110.. ........ */
                        /* ./loongarch.decode.2:54 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CTO_W;
                        return true;
                        break;
                    case 0x7:
                        /* 00000000 00000000 000111.. ........ */
                        /* ./loongarch.decode.2:55 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CTZ_W;
                        return true;
                        break;
                    case 0x8:
                        /* 00000000 00000000 001000.. ........ */
                        /* ./loongarch.decode.2:56 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CLO_D;
                        return true;
                        break;
                    case 0x9:
                        /* 00000000 00000000 001001.. ........ */
                        /* ./loongarch.decode.2:57 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CLZ_D;
                        return true;
                        break;
                    case 0xa:
                        /* 00000000 00000000 001010.. ........ */
                        /* ./loongarch.decode.2:58 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CTO_D;
                        return true;
                        break;
                    case 0xb:
                        /* 00000000 00000000 001011.. ........ */
                        /* ./loongarch.decode.2:59 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CTZ_D;
                        return true;
                        break;
                    case 0xc:
                        /* 00000000 00000000 001100.. ........ */
                        /* ./loongarch.decode.2:60 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_REVB_2H;
                        return true;
                        break;
                    case 0xd:
                        /* 00000000 00000000 001101.. ........ */
                        /* ./loongarch.decode.2:61 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_REVB_4H;
                        return true;
                        break;
                    case 0xe:
                        /* 00000000 00000000 001110.. ........ */
                        /* ./loongarch.decode.2:62 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_REVB_2W;
                        return true;
                        break;
                    case 0xf:
                        /* 00000000 00000000 001111.. ........ */
                        /* ./loongarch.decode.2:63 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_REVB_D;
                        return true;
                        break;
                    case 0x10:
                        /* 00000000 00000000 010000.. ........ */
                        /* ./loongarch.decode.2:64 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_REVH_2W;
                        return true;
                        break;
                    case 0x11:
                        /* 00000000 00000000 010001.. ........ */
                        /* ./loongarch.decode.2:65 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_REVH_D;
                        return true;
                        break;
                    case 0x12:
                        /* 00000000 00000000 010010.. ........ */
                        /* ./loongarch.decode.2:66 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_BITREV_4B;
                        return true;
                        break;
                    case 0x13:
                        /* 00000000 00000000 010011.. ........ */
                        /* ./loongarch.decode.2:67 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_BITREV_8B;
                        return true;
                        break;
                    case 0x14:
                        /* 00000000 00000000 010100.. ........ */
                        /* ./loongarch.decode.2:68 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_BITREV_W;
                        return true;
                        break;
                    case 0x15:
                        /* 00000000 00000000 010101.. ........ */
                        /* ./loongarch.decode.2:69 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_BITREV_D;
                        return true;
                        break;
                    case 0x16:
                        /* 00000000 00000000 010110.. ........ */
                        /* ./loongarch.decode.2:70 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_EXT_W_H;
                        return true;
                        break;
                    case 0x17:
                        /* 00000000 00000000 010111.. ........ */
                        /* ./loongarch.decode.2:71 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_EXT_W_B;
                        return true;
                        break;
                    case 0x18:
                        /* 00000000 00000000 011000.. ........ */
                        /* ./loongarch.decode.2:72 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_RDTIMEL_W;
                        return true;
                        break;
                    case 0x19:
                        /* 00000000 00000000 011001.. ........ */
                        /* ./loongarch.decode.2:73 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_RDTIMEH_W;
                        return true;
                        break;
                    case 0x1a:
                        /* 00000000 00000000 011010.. ........ */
                        /* ./loongarch.decode.2:74 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_RDTIME_D;
                        return true;
                        break;
                    case 0x1b:
                        /* 00000000 00000000 011011.. ........ */
                        /* ./loongarch.decode.2:75 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_CPUCFG;
                        return true;
                        break;
                    case 0x1c:
                        /* 00000000 00000000 011100.. ........ */
                        decode_extract_format_48(info, insn);
                        switch (insn & 0x0000031f) {
                        case 0x00000000:
                            /* 00000000 00000000 01110000 ...00000 */
                            /* ./loongarch.decode.2:431 */
                            info->opc = OPC_X86MTTOP;
                            return true;
                            break;
                        }
                        break;
                    case 0x1d:
                        /* 00000000 00000000 011101.. ........ */
                        decode_extract_format_49(info, insn);
                        switch ((insn >> 5) & 0x1f) {
                        case 0x0:
                            /* 00000000 00000000 01110100 000..... */
                            /* ./loongarch.decode.2:432 */
                            info->opc = OPC_X86MFTOP;
                            return true;
                            break;
                        }
                        break;
                    case 0x1e:
                        /* 00000000 00000000 011110.. ........ */
                        /* ./loongarch.decode.2:433 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_SETX86LOOPE;
                        return true;
                        break;
                    case 0x1f:
                        /* 00000000 00000000 011111.. ........ */
                        /* ./loongarch.decode.2:434 */
                        decode_extract_format_0(info, insn);
                        info->opc = OPC_SETX86LOOPNE;
                        return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 00000000 00000000 1....... ........ */
                    switch (insn & 0x00007c1f) {
                    case 0x00000000:
                        /* 00000000 00000000 100000.. ...00000 */
                        /* ./loongarch.decode.2:435 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86INC_B;
                        return true;
                        break;
                    case 0x00000001:
                        /* 00000000 00000000 100000.. ...00001 */
                        /* ./loongarch.decode.2:436 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86INC_H;
                        return true;
                        break;
                    case 0x00000002:
                        /* 00000000 00000000 100000.. ...00010 */
                        /* ./loongarch.decode.2:437 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86INC_W;
                        return true;
                        break;
                    case 0x00000003:
                        /* 00000000 00000000 100000.. ...00011 */
                        /* ./loongarch.decode.2:438 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86INC_D;
                        return true;
                        break;
                    case 0x00000004:
                        /* 00000000 00000000 100000.. ...00100 */
                        /* ./loongarch.decode.2:439 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86DEC_B;
                        return true;
                        break;
                    case 0x00000005:
                        /* 00000000 00000000 100000.. ...00101 */
                        /* ./loongarch.decode.2:440 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86DEC_H;
                        return true;
                        break;
                    case 0x00000006:
                        /* 00000000 00000000 100000.. ...00110 */
                        /* ./loongarch.decode.2:441 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86DEC_W;
                        return true;
                        break;
                    case 0x00000007:
                        /* 00000000 00000000 100000.. ...00111 */
                        /* ./loongarch.decode.2:442 */
                        decode_extract_format_50(info, insn);
                        info->opc = OPC_X86DEC_D;
                        return true;
                        break;
                    case 0x00000008:
                        /* 00000000 00000000 100000.. ...01000 */
                        decode_extract_format_27(info, insn);
                        switch ((insn >> 5) & 0x1f) {
                        case 0x0:
                            /* 00000000 00000000 10000000 00001000 */
                            /* ./loongarch.decode.2:443 */
                            info->opc = OPC_X86SETTM;
                            return true;
                            break;
                        case 0x1:
                            /* 00000000 00000000 10000000 00101000 */
                            /* ./loongarch.decode.2:444 */
                            info->opc = OPC_X86CLRTM;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000009:
                        /* 00000000 00000000 100000.. ...01001 */
                        decode_extract_format_27(info, insn);
                        switch ((insn >> 5) & 0x1f) {
                        case 0x0:
                            /* 00000000 00000000 10000000 00001001 */
                            /* ./loongarch.decode.2:445 */
                            info->opc = OPC_X86INCTOP;
                            return true;
                            break;
                        case 0x1:
                            /* 00000000 00000000 10000000 00101001 */
                            /* ./loongarch.decode.2:446 */
                            info->opc = OPC_X86DECTOP;
                            return true;
                            break;
                        }
                        break;
                    }
                    break;
                case 0x2:
                    /* 00000000 00000001 0....... ........ */
                    decode_extract_format_1(info, insn);
                    switch (insn & 0x0000001f) {
                    case 0x00000000:
                        /* 00000000 00000001 0....... ...00000 */
                        /* ./loongarch.decode.2:76 */
                        info->opc = OPC_ASRTLE_D;
                        return true;
                        break;
                    }
                    break;
                case 0x3:
                    /* 00000000 00000001 1....... ........ */
                    decode_extract_format_1(info, insn);
                    switch (insn & 0x0000001f) {
                    case 0x00000000:
                        /* 00000000 00000001 1....... ...00000 */
                        /* ./loongarch.decode.2:77 */
                        info->opc = OPC_ASRTGT_D;
                        return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x1:
                /* 00000000 000001.. ........ ........ */
                decode_extract_format_2(info, insn);
                switch ((insn >> 17) & 0x1) {
                case 0x0:
                    /* 00000000 0000010. ........ ........ */
                    /* ./loongarch.decode.2:78 */
                    info->opc = OPC_ALSL_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 0000011. ........ ........ */
                    /* ./loongarch.decode.2:79 */
                    info->opc = OPC_ALSL_WU;
                    return true;
                    break;
                }
                break;
            case 0x2:
                /* 00000000 000010.. ........ ........ */
                decode_extract_format_2(info, insn);
                switch ((insn >> 17) & 0x1) {
                case 0x0:
                    /* 00000000 0000100. ........ ........ */
                    /* ./loongarch.decode.2:80 */
                    info->opc = OPC_BYTEPICK_W;
                    return true;
                    break;
                }
                break;
            case 0x3:
                /* 00000000 000011.. ........ ........ */
                /* ./loongarch.decode.2:81 */
                decode_extract_format_3(info, insn);
                info->opc = OPC_BYTEPICK_D;
                return true;
                break;
            case 0x4:
                /* 00000000 000100.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00010000 0....... ........ */
                    /* ./loongarch.decode.2:82 */
                    info->opc = OPC_ADD_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00010000 1....... ........ */
                    /* ./loongarch.decode.2:83 */
                    info->opc = OPC_ADD_D;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00010001 0....... ........ */
                    /* ./loongarch.decode.2:84 */
                    info->opc = OPC_SUB_W;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00010001 1....... ........ */
                    /* ./loongarch.decode.2:85 */
                    info->opc = OPC_SUB_D;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00010010 0....... ........ */
                    /* ./loongarch.decode.2:86 */
                    info->opc = OPC_SLT;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00010010 1....... ........ */
                    /* ./loongarch.decode.2:87 */
                    info->opc = OPC_SLTU;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00010011 0....... ........ */
                    /* ./loongarch.decode.2:88 */
                    info->opc = OPC_MASKEQZ;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00010011 1....... ........ */
                    /* ./loongarch.decode.2:89 */
                    info->opc = OPC_MASKNEZ;
                    return true;
                    break;
                }
                break;
            case 0x5:
                /* 00000000 000101.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00010100 0....... ........ */
                    /* ./loongarch.decode.2:90 */
                    info->opc = OPC_NOR;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00010100 1....... ........ */
                    /* ./loongarch.decode.2:91 */
                    info->opc = OPC_AND;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00010101 0....... ........ */
                    /* ./loongarch.decode.2:92 */
                    info->opc = OPC_OR;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00010101 1....... ........ */
                    /* ./loongarch.decode.2:93 */
                    info->opc = OPC_XOR;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00010110 0....... ........ */
                    /* ./loongarch.decode.2:94 */
                    info->opc = OPC_ORN;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00010110 1....... ........ */
                    /* ./loongarch.decode.2:95 */
                    info->opc = OPC_ANDN;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00010111 0....... ........ */
                    /* ./loongarch.decode.2:96 */
                    info->opc = OPC_SLL_W;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00010111 1....... ........ */
                    /* ./loongarch.decode.2:97 */
                    info->opc = OPC_SRL_W;
                    return true;
                    break;
                }
                break;
            case 0x6:
                /* 00000000 000110.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00011000 0....... ........ */
                    /* ./loongarch.decode.2:98 */
                    info->opc = OPC_SRA_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00011000 1....... ........ */
                    /* ./loongarch.decode.2:99 */
                    info->opc = OPC_SLL_D;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00011001 0....... ........ */
                    /* ./loongarch.decode.2:100 */
                    info->opc = OPC_SRL_D;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00011001 1....... ........ */
                    /* ./loongarch.decode.2:101 */
                    info->opc = OPC_SRA_D;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00011010 0....... ........ */
                    /* ./loongarch.decode.2:447 */
                    info->opc = OPC_ROTR_B;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00011010 1....... ........ */
                    /* ./loongarch.decode.2:448 */
                    info->opc = OPC_ROTR_H;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00011011 0....... ........ */
                    /* ./loongarch.decode.2:102 */
                    info->opc = OPC_ROTR_W;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00011011 1....... ........ */
                    /* ./loongarch.decode.2:103 */
                    info->opc = OPC_ROTR_D;
                    return true;
                    break;
                }
                break;
            case 0x7:
                /* 00000000 000111.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00011100 0....... ........ */
                    /* ./loongarch.decode.2:104 */
                    info->opc = OPC_MUL_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00011100 1....... ........ */
                    /* ./loongarch.decode.2:105 */
                    info->opc = OPC_MULH_W;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00011101 0....... ........ */
                    /* ./loongarch.decode.2:106 */
                    info->opc = OPC_MULH_WU;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00011101 1....... ........ */
                    /* ./loongarch.decode.2:107 */
                    info->opc = OPC_MUL_D;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00011110 0....... ........ */
                    /* ./loongarch.decode.2:108 */
                    info->opc = OPC_MULH_D;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00011110 1....... ........ */
                    /* ./loongarch.decode.2:109 */
                    info->opc = OPC_MULH_DU;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00011111 0....... ........ */
                    /* ./loongarch.decode.2:110 */
                    info->opc = OPC_MULW_D_W;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00011111 1....... ........ */
                    /* ./loongarch.decode.2:111 */
                    info->opc = OPC_MULW_D_WU;
                    return true;
                    break;
                }
                break;
            case 0x8:
                /* 00000000 001000.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00100000 0....... ........ */
                    /* ./loongarch.decode.2:112 */
                    info->opc = OPC_DIV_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00100000 1....... ........ */
                    /* ./loongarch.decode.2:113 */
                    info->opc = OPC_MOD_W;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00100001 0....... ........ */
                    /* ./loongarch.decode.2:114 */
                    info->opc = OPC_DIV_WU;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00100001 1....... ........ */
                    /* ./loongarch.decode.2:115 */
                    info->opc = OPC_MOD_WU;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00100010 0....... ........ */
                    /* ./loongarch.decode.2:116 */
                    info->opc = OPC_DIV_D;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00100010 1....... ........ */
                    /* ./loongarch.decode.2:117 */
                    info->opc = OPC_MOD_D;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00100011 0....... ........ */
                    /* ./loongarch.decode.2:118 */
                    info->opc = OPC_DIV_DU;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00100011 1....... ........ */
                    /* ./loongarch.decode.2:119 */
                    info->opc = OPC_MOD_DU;
                    return true;
                    break;
                }
                break;
            case 0x9:
                /* 00000000 001001.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00100100 0....... ........ */
                    /* ./loongarch.decode.2:120 */
                    info->opc = OPC_CRC_W_B_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00100100 1....... ........ */
                    /* ./loongarch.decode.2:121 */
                    info->opc = OPC_CRC_W_H_W;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00100101 0....... ........ */
                    /* ./loongarch.decode.2:122 */
                    info->opc = OPC_CRC_W_W_W;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00100101 1....... ........ */
                    /* ./loongarch.decode.2:123 */
                    info->opc = OPC_CRC_W_D_W;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00100110 0....... ........ */
                    /* ./loongarch.decode.2:124 */
                    info->opc = OPC_CRCC_W_B_W;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00100110 1....... ........ */
                    /* ./loongarch.decode.2:125 */
                    info->opc = OPC_CRCC_W_H_W;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00100111 0....... ........ */
                    /* ./loongarch.decode.2:126 */
                    info->opc = OPC_CRCC_W_W_W;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00100111 1....... ........ */
                    /* ./loongarch.decode.2:127 */
                    info->opc = OPC_CRCC_W_D_W;
                    return true;
                    break;
                }
                break;
            case 0xa:
                /* 00000000 001010.. ........ ........ */
                switch ((insn >> 15) & 0x7) {
                case 0x2:
                    /* 00000000 00101001 0....... ........ */
                    /* ./loongarch.decode.2:450 */
                    decode_extract_format_51(info, insn);
                    info->opc = OPC_ADDU12I_D;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00101001 1....... ........ */
                    /* ./loongarch.decode.2:449 */
                    decode_extract_format_51(info, insn);
                    info->opc = OPC_ADDU12I_W;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00101010 0....... ........ */
                    /* ./loongarch.decode.2:128 */
                    decode_extract_format_5(info, insn);
                    info->opc = OPC_BREAK;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00101010 1....... ........ */
                    /* ./loongarch.decode.2:129 */
                    decode_extract_format_5(info, insn);
                    info->opc = OPC_DBCL;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00101011 0....... ........ */
                    /* ./loongarch.decode.2:130 */
                    decode_extract_format_5(info, insn);
                    info->opc = OPC_SYSCALL;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00101011 1....... ........ */
                    /* ./loongarch.decode.2:451 */
                    decode_extract_format_5(info, insn);
                    info->opc = OPC_HVCL;
                    return true;
                    break;
                }
                break;
            case 0xb:
                /* 00000000 001011.. ........ ........ */
                decode_extract_format_2(info, insn);
                switch ((insn >> 17) & 0x1) {
                case 0x0:
                    /* 00000000 0010110. ........ ........ */
                    /* ./loongarch.decode.2:131 */
                    info->opc = OPC_ALSL_D;
                    return true;
                    break;
                }
                break;
            case 0xc:
                /* 00000000 001100.. ........ ........ */
                decode_extract_format_4(info, insn);
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00110000 0....... ........ */
                    /* ./loongarch.decode.2:452 */
                    info->opc = OPC_ADC_B;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00110000 1....... ........ */
                    /* ./loongarch.decode.2:453 */
                    info->opc = OPC_ADC_H;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00110001 0....... ........ */
                    /* ./loongarch.decode.2:454 */
                    info->opc = OPC_ADC_W;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00110001 1....... ........ */
                    /* ./loongarch.decode.2:455 */
                    info->opc = OPC_ADC_D;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00110010 0....... ........ */
                    /* ./loongarch.decode.2:456 */
                    info->opc = OPC_SBC_B;
                    return true;
                    break;
                case 0x5:
                    /* 00000000 00110010 1....... ........ */
                    /* ./loongarch.decode.2:457 */
                    info->opc = OPC_SBC_H;
                    return true;
                    break;
                case 0x6:
                    /* 00000000 00110011 0....... ........ */
                    /* ./loongarch.decode.2:458 */
                    info->opc = OPC_SBC_W;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 00110011 1....... ........ */
                    /* ./loongarch.decode.2:459 */
                    info->opc = OPC_SBC_D;
                    return true;
                    break;
                }
                break;
            case 0xd:
                /* 00000000 001101.. ........ ........ */
                switch ((insn >> 15) & 0x7) {
                case 0x0:
                    /* 00000000 00110100 0....... ........ */
                    /* ./loongarch.decode.2:460 */
                    decode_extract_format_4(info, insn);
                    info->opc = OPC_RCR_B;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 00110100 1....... ........ */
                    /* ./loongarch.decode.2:461 */
                    decode_extract_format_4(info, insn);
                    info->opc = OPC_RCR_H;
                    return true;
                    break;
                case 0x2:
                    /* 00000000 00110101 0....... ........ */
                    /* ./loongarch.decode.2:462 */
                    decode_extract_format_4(info, insn);
                    info->opc = OPC_RCR_W;
                    return true;
                    break;
                case 0x3:
                    /* 00000000 00110101 1....... ........ */
                    /* ./loongarch.decode.2:463 */
                    decode_extract_format_4(info, insn);
                    info->opc = OPC_RCR_D;
                    return true;
                    break;
                case 0x4:
                    /* 00000000 00110110 0....... ........ */
                    decode_extract_format_52(info, insn);
                    switch ((insn >> 14) & 0x1) {
                    case 0x1:
                        /* 00000000 00110110 01...... ........ */
                        /* ./loongarch.decode.2:464 */
                        info->opc = OPC_ARMMOVE;
                        return true;
                        break;
                    }
                    break;
                case 0x5:
                    /* 00000000 00110110 1....... ........ */
                    decode_extract_format_53(info, insn);
                    switch (insn & 0x000043e0) {
                    case 0x00000000:
                        /* 00000000 00110110 10....00 000..... */
                        /* ./loongarch.decode.2:465 */
                        info->opc = OPC_SETX86J;
                        return true;
                        break;
                    case 0x00004000:
                        /* 00000000 00110110 11....00 000..... */
                        /* ./loongarch.decode.2:466 */
                        info->opc = OPC_SETARMJ;
                        return true;
                        break;
                    }
                    break;
                case 0x6:
                    /* 00000000 00110111 0....... ........ */
                    decode_extract_format_54(info, insn);
                    switch ((insn >> 4) & 0x1) {
                    case 0x1:
                        /* 00000000 00110111 0....... ...1.... */
                        /* ./loongarch.decode.2:467 */
                        info->opc = OPC_ARMADD_W;
                        return true;
                        break;
                    }
                    break;
                case 0x7:
                    /* 00000000 00110111 1....... ........ */
                    decode_extract_format_54(info, insn);
                    switch ((insn >> 4) & 0x1) {
                    case 0x1:
                        /* 00000000 00110111 1....... ...1.... */
                        /* ./loongarch.decode.2:468 */
                        info->opc = OPC_ARMSUB_W;
                        return true;
                        break;
                    }
                    break;
                }
                break;
            case 0xe:
                /* 00000000 001110.. ........ ........ */
                decode_extract_format_54(info, insn);
                switch (insn & 0x00038010) {
                case 0x00000010:
                    /* 00000000 00111000 0....... ...1.... */
                    /* ./loongarch.decode.2:469 */
                    info->opc = OPC_ARMADC_W;
                    return true;
                    break;
                case 0x00008010:
                    /* 00000000 00111000 1....... ...1.... */
                    /* ./loongarch.decode.2:470 */
                    info->opc = OPC_ARMSBC_W;
                    return true;
                    break;
                case 0x00010010:
                    /* 00000000 00111001 0....... ...1.... */
                    /* ./loongarch.decode.2:471 */
                    info->opc = OPC_ARMAND_W;
                    return true;
                    break;
                case 0x00018010:
                    /* 00000000 00111001 1....... ...1.... */
                    /* ./loongarch.decode.2:472 */
                    info->opc = OPC_ARMOR_W;
                    return true;
                    break;
                case 0x00020010:
                    /* 00000000 00111010 0....... ...1.... */
                    /* ./loongarch.decode.2:473 */
                    info->opc = OPC_ARMXOR_W;
                    return true;
                    break;
                case 0x00028010:
                    /* 00000000 00111010 1....... ...1.... */
                    /* ./loongarch.decode.2:474 */
                    info->opc = OPC_ARMSLL_W;
                    return true;
                    break;
                case 0x00030010:
                    /* 00000000 00111011 0....... ...1.... */
                    /* ./loongarch.decode.2:475 */
                    info->opc = OPC_ARMSRL_W;
                    return true;
                    break;
                case 0x00038010:
                    /* 00000000 00111011 1....... ...1.... */
                    /* ./loongarch.decode.2:476 */
                    info->opc = OPC_ARMSRA_W;
                    return true;
                    break;
                }
                break;
            case 0xf:
                /* 00000000 001111.. ........ ........ */
                switch (insn & 0x00038010) {
                case 0x00000010:
                    /* 00000000 00111100 0....... ...1.... */
                    /* ./loongarch.decode.2:477 */
                    decode_extract_format_54(info, insn);
                    info->opc = OPC_ARMROTR_W;
                    return true;
                    break;
                case 0x00008010:
                    /* 00000000 00111100 1....... ...1.... */
                    /* ./loongarch.decode.2:478 */
                    decode_extract_format_54(info, insn);
                    info->opc = OPC_ARMSLLI_W;
                    return true;
                    break;
                case 0x00010010:
                    /* 00000000 00111101 0....... ...1.... */
                    /* ./loongarch.decode.2:479 */
                    decode_extract_format_54(info, insn);
                    info->opc = OPC_ARMSRLI_W;
                    return true;
                    break;
                case 0x00018010:
                    /* 00000000 00111101 1....... ...1.... */
                    /* ./loongarch.decode.2:480 */
                    decode_extract_format_54(info, insn);
                    info->opc = OPC_ARMSRAI_W;
                    return true;
                    break;
                case 0x00020010:
                    /* 00000000 00111110 0....... ...1.... */
                    /* ./loongarch.decode.2:481 */
                    decode_extract_format_54(info, insn);
                    info->opc = OPC_ARMROTRI_W;
                    return true;
                    break;
                case 0x00028000:
                    /* 00000000 00111110 1....... ...0.... */
                    decode_extract_format_1(info, insn);
                    switch (insn & 0x0000000f) {
                    case 0x00000000:
                        /* 00000000 00111110 1....... ...00000 */
                        /* ./loongarch.decode.2:482 */
                        info->opc = OPC_X86MUL_B;
                        return true;
                        break;
                    case 0x00000001:
                        /* 00000000 00111110 1....... ...00001 */
                        /* ./loongarch.decode.2:483 */
                        info->opc = OPC_X86MUL_H;
                        return true;
                        break;
                    case 0x00000002:
                        /* 00000000 00111110 1....... ...00010 */
                        /* ./loongarch.decode.2:484 */
                        info->opc = OPC_X86MUL_W;
                        return true;
                        break;
                    case 0x00000003:
                        /* 00000000 00111110 1....... ...00011 */
                        /* ./loongarch.decode.2:485 */
                        info->opc = OPC_X86MUL_D;
                        return true;
                        break;
                    case 0x00000004:
                        /* 00000000 00111110 1....... ...00100 */
                        /* ./loongarch.decode.2:486 */
                        info->opc = OPC_X86MUL_BU;
                        return true;
                        break;
                    case 0x00000005:
                        /* 00000000 00111110 1....... ...00101 */
                        /* ./loongarch.decode.2:487 */
                        info->opc = OPC_X86MUL_HU;
                        return true;
                        break;
                    case 0x00000006:
                        /* 00000000 00111110 1....... ...00110 */
                        /* ./loongarch.decode.2:488 */
                        info->opc = OPC_X86MUL_WU;
                        return true;
                        break;
                    case 0x00000007:
                        /* 00000000 00111110 1....... ...00111 */
                        /* ./loongarch.decode.2:489 */
                        info->opc = OPC_X86MUL_DU;
                        return true;
                        break;
                    }
                    break;
                case 0x00030000:
                    /* 00000000 00111111 0....... ...0.... */
                    decode_extract_format_1(info, insn);
                    switch (insn & 0x0000000f) {
                    case 0x00000000:
                        /* 00000000 00111111 0....... ...00000 */
                        /* ./loongarch.decode.2:490 */
                        info->opc = OPC_X86ADD_WU;
                        return true;
                        break;
                    case 0x00000001:
                        /* 00000000 00111111 0....... ...00001 */
                        /* ./loongarch.decode.2:491 */
                        info->opc = OPC_X86ADD_DU;
                        return true;
                        break;
                    case 0x00000002:
                        /* 00000000 00111111 0....... ...00010 */
                        /* ./loongarch.decode.2:492 */
                        info->opc = OPC_X86SUB_WU;
                        return true;
                        break;
                    case 0x00000003:
                        /* 00000000 00111111 0....... ...00011 */
                        /* ./loongarch.decode.2:493 */
                        info->opc = OPC_X86SUB_DU;
                        return true;
                        break;
                    case 0x00000004:
                        /* 00000000 00111111 0....... ...00100 */
                        /* ./loongarch.decode.2:494 */
                        info->opc = OPC_X86ADD_B;
                        return true;
                        break;
                    case 0x00000005:
                        /* 00000000 00111111 0....... ...00101 */
                        /* ./loongarch.decode.2:495 */
                        info->opc = OPC_X86ADD_H;
                        return true;
                        break;
                    case 0x00000006:
                        /* 00000000 00111111 0....... ...00110 */
                        /* ./loongarch.decode.2:496 */
                        info->opc = OPC_X86ADD_W;
                        return true;
                        break;
                    case 0x00000007:
                        /* 00000000 00111111 0....... ...00111 */
                        /* ./loongarch.decode.2:497 */
                        info->opc = OPC_X86ADD_D;
                        return true;
                        break;
                    case 0x00000008:
                        /* 00000000 00111111 0....... ...01000 */
                        /* ./loongarch.decode.2:498 */
                        info->opc = OPC_X86SUB_B;
                        return true;
                        break;
                    case 0x00000009:
                        /* 00000000 00111111 0....... ...01001 */
                        /* ./loongarch.decode.2:499 */
                        info->opc = OPC_X86SUB_H;
                        return true;
                        break;
                    case 0x0000000a:
                        /* 00000000 00111111 0....... ...01010 */
                        /* ./loongarch.decode.2:500 */
                        info->opc = OPC_X86SUB_W;
                        return true;
                        break;
                    case 0x0000000b:
                        /* 00000000 00111111 0....... ...01011 */
                        /* ./loongarch.decode.2:501 */
                        info->opc = OPC_X86SUB_D;
                        return true;
                        break;
                    case 0x0000000c:
                        /* 00000000 00111111 0....... ...01100 */
                        /* ./loongarch.decode.2:502 */
                        info->opc = OPC_X86ADC_B;
                        return true;
                        break;
                    case 0x0000000d:
                        /* 00000000 00111111 0....... ...01101 */
                        /* ./loongarch.decode.2:503 */
                        info->opc = OPC_X86ADC_H;
                        return true;
                        break;
                    case 0x0000000e:
                        /* 00000000 00111111 0....... ...01110 */
                        /* ./loongarch.decode.2:504 */
                        info->opc = OPC_X86ADC_W;
                        return true;
                        break;
                    case 0x0000000f:
                        /* 00000000 00111111 0....... ...01111 */
                        /* ./loongarch.decode.2:505 */
                        info->opc = OPC_X86ADC_D;
                        return true;
                        break;
                    }
                    break;
                case 0x00030010:
                    /* 00000000 00111111 0....... ...1.... */
                    decode_extract_format_1(info, insn);
                    switch (insn & 0x0000000f) {
                    case 0x00000000:
                        /* 00000000 00111111 0....... ...10000 */
                        /* ./loongarch.decode.2:506 */
                        info->opc = OPC_X86SBC_B;
                        return true;
                        break;
                    case 0x00000001:
                        /* 00000000 00111111 0....... ...10001 */
                        /* ./loongarch.decode.2:507 */
                        info->opc = OPC_X86SBC_H;
                        return true;
                        break;
                    case 0x00000002:
                        /* 00000000 00111111 0....... ...10010 */
                        /* ./loongarch.decode.2:508 */
                        info->opc = OPC_X86SBC_W;
                        return true;
                        break;
                    case 0x00000003:
                        /* 00000000 00111111 0....... ...10011 */
                        /* ./loongarch.decode.2:509 */
                        info->opc = OPC_X86SBC_D;
                        return true;
                        break;
                    case 0x00000004:
                        /* 00000000 00111111 0....... ...10100 */
                        /* ./loongarch.decode.2:510 */
                        info->opc = OPC_X86SLL_B;
                        return true;
                        break;
                    case 0x00000005:
                        /* 00000000 00111111 0....... ...10101 */
                        /* ./loongarch.decode.2:511 */
                        info->opc = OPC_X86SLL_H;
                        return true;
                        break;
                    case 0x00000006:
                        /* 00000000 00111111 0....... ...10110 */
                        /* ./loongarch.decode.2:512 */
                        info->opc = OPC_X86SLL_W;
                        return true;
                        break;
                    case 0x00000007:
                        /* 00000000 00111111 0....... ...10111 */
                        /* ./loongarch.decode.2:513 */
                        info->opc = OPC_X86SLL_D;
                        return true;
                        break;
                    case 0x00000008:
                        /* 00000000 00111111 0....... ...11000 */
                        /* ./loongarch.decode.2:514 */
                        info->opc = OPC_X86SRL_B;
                        return true;
                        break;
                    case 0x00000009:
                        /* 00000000 00111111 0....... ...11001 */
                        /* ./loongarch.decode.2:515 */
                        info->opc = OPC_X86SRL_H;
                        return true;
                        break;
                    case 0x0000000a:
                        /* 00000000 00111111 0....... ...11010 */
                        /* ./loongarch.decode.2:516 */
                        info->opc = OPC_X86SRL_W;
                        return true;
                        break;
                    case 0x0000000b:
                        /* 00000000 00111111 0....... ...11011 */
                        /* ./loongarch.decode.2:517 */
                        info->opc = OPC_X86SRL_D;
                        return true;
                        break;
                    case 0x0000000c:
                        /* 00000000 00111111 0....... ...11100 */
                        /* ./loongarch.decode.2:518 */
                        info->opc = OPC_X86SRA_B;
                        return true;
                        break;
                    case 0x0000000d:
                        /* 00000000 00111111 0....... ...11101 */
                        /* ./loongarch.decode.2:519 */
                        info->opc = OPC_X86SRA_H;
                        return true;
                        break;
                    case 0x0000000e:
                        /* 00000000 00111111 0....... ...11110 */
                        /* ./loongarch.decode.2:520 */
                        info->opc = OPC_X86SRA_W;
                        return true;
                        break;
                    case 0x0000000f:
                        /* 00000000 00111111 0....... ...11111 */
                        /* ./loongarch.decode.2:521 */
                        info->opc = OPC_X86SRA_D;
                        return true;
                        break;
                    }
                    break;
                case 0x00038000:
                    /* 00000000 00111111 1....... ...0.... */
                    decode_extract_format_1(info, insn);
                    switch (insn & 0x0000000f) {
                    case 0x00000000:
                        /* 00000000 00111111 1....... ...00000 */
                        /* ./loongarch.decode.2:522 */
                        info->opc = OPC_X86ROTR_B;
                        return true;
                        break;
                    case 0x00000001:
                        /* 00000000 00111111 1....... ...00001 */
                        /* ./loongarch.decode.2:523 */
                        info->opc = OPC_X86ROTR_H;
                        return true;
                        break;
                    case 0x00000002:
                        /* 00000000 00111111 1....... ...00010 */
                        /* ./loongarch.decode.2:524 */
                        info->opc = OPC_X86ROTR_D;
                        return true;
                        break;
                    case 0x00000003:
                        /* 00000000 00111111 1....... ...00011 */
                        /* ./loongarch.decode.2:525 */
                        info->opc = OPC_X86ROTR_W;
                        return true;
                        break;
                    case 0x00000004:
                        /* 00000000 00111111 1....... ...00100 */
                        /* ./loongarch.decode.2:526 */
                        info->opc = OPC_X86ROTL_B;
                        return true;
                        break;
                    case 0x00000005:
                        /* 00000000 00111111 1....... ...00101 */
                        /* ./loongarch.decode.2:527 */
                        info->opc = OPC_X86ROTL_H;
                        return true;
                        break;
                    case 0x00000006:
                        /* 00000000 00111111 1....... ...00110 */
                        /* ./loongarch.decode.2:528 */
                        info->opc = OPC_X86ROTL_W;
                        return true;
                        break;
                    case 0x00000007:
                        /* 00000000 00111111 1....... ...00111 */
                        /* ./loongarch.decode.2:529 */
                        info->opc = OPC_X86ROTL_D;
                        return true;
                        break;
                    case 0x00000008:
                        /* 00000000 00111111 1....... ...01000 */
                        /* ./loongarch.decode.2:530 */
                        info->opc = OPC_X86RCR_B;
                        return true;
                        break;
                    case 0x00000009:
                        /* 00000000 00111111 1....... ...01001 */
                        /* ./loongarch.decode.2:531 */
                        info->opc = OPC_X86RCR_H;
                        return true;
                        break;
                    case 0x0000000a:
                        /* 00000000 00111111 1....... ...01010 */
                        /* ./loongarch.decode.2:532 */
                        info->opc = OPC_X86RCR_W;
                        return true;
                        break;
                    case 0x0000000b:
                        /* 00000000 00111111 1....... ...01011 */
                        /* ./loongarch.decode.2:533 */
                        info->opc = OPC_X86RCR_D;
                        return true;
                        break;
                    case 0x0000000c:
                        /* 00000000 00111111 1....... ...01100 */
                        /* ./loongarch.decode.2:534 */
                        info->opc = OPC_X86RCL_B;
                        return true;
                        break;
                    case 0x0000000d:
                        /* 00000000 00111111 1....... ...01101 */
                        /* ./loongarch.decode.2:535 */
                        info->opc = OPC_X86RCL_H;
                        return true;
                        break;
                    case 0x0000000e:
                        /* 00000000 00111111 1....... ...01110 */
                        /* ./loongarch.decode.2:536 */
                        info->opc = OPC_X86RCL_W;
                        return true;
                        break;
                    case 0x0000000f:
                        /* 00000000 00111111 1....... ...01111 */
                        /* ./loongarch.decode.2:537 */
                        info->opc = OPC_X86RCL_D;
                        return true;
                        break;
                    }
                    break;
                case 0x00038010:
                    /* 00000000 00111111 1....... ...1.... */
                    switch (insn & 0x0000000f) {
                    case 0x00000000:
                        /* 00000000 00111111 1....... ...10000 */
                        /* ./loongarch.decode.2:538 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86AND_B;
                        return true;
                        break;
                    case 0x00000001:
                        /* 00000000 00111111 1....... ...10001 */
                        /* ./loongarch.decode.2:539 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86AND_H;
                        return true;
                        break;
                    case 0x00000002:
                        /* 00000000 00111111 1....... ...10010 */
                        /* ./loongarch.decode.2:540 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86AND_W;
                        return true;
                        break;
                    case 0x00000003:
                        /* 00000000 00111111 1....... ...10011 */
                        /* ./loongarch.decode.2:541 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86AND_D;
                        return true;
                        break;
                    case 0x00000004:
                        /* 00000000 00111111 1....... ...10100 */
                        /* ./loongarch.decode.2:542 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86OR_B;
                        return true;
                        break;
                    case 0x00000005:
                        /* 00000000 00111111 1....... ...10101 */
                        /* ./loongarch.decode.2:543 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86OR_H;
                        return true;
                        break;
                    case 0x00000006:
                        /* 00000000 00111111 1....... ...10110 */
                        /* ./loongarch.decode.2:544 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86OR_W;
                        return true;
                        break;
                    case 0x00000007:
                        /* 00000000 00111111 1....... ...10111 */
                        /* ./loongarch.decode.2:545 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86OR_D;
                        return true;
                        break;
                    case 0x00000008:
                        /* 00000000 00111111 1....... ...11000 */
                        /* ./loongarch.decode.2:546 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86XOR_B;
                        return true;
                        break;
                    case 0x00000009:
                        /* 00000000 00111111 1....... ...11001 */
                        /* ./loongarch.decode.2:547 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86XOR_H;
                        return true;
                        break;
                    case 0x0000000a:
                        /* 00000000 00111111 1....... ...11010 */
                        /* ./loongarch.decode.2:548 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86XOR_W;
                        return true;
                        break;
                    case 0x0000000b:
                        /* 00000000 00111111 1....... ...11011 */
                        /* ./loongarch.decode.2:549 */
                        decode_extract_format_1(info, insn);
                        info->opc = OPC_X86XOR_D;
                        return true;
                        break;
                    case 0x0000000c:
                        /* 00000000 00111111 1....... ...11100 */
                        decode_extract_format_55(info, insn);
                        switch ((insn >> 14) & 0x1) {
                        case 0x1:
                            /* 00000000 00111111 11...... ...11100 */
                            /* ./loongarch.decode.2:550 */
                            info->opc = OPC_ARMNOT_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000d:
                        /* 00000000 00111111 1....... ...11101 */
                        decode_extract_format_55(info, insn);
                        switch ((insn >> 14) & 0x1) {
                        case 0x1:
                            /* 00000000 00111111 11...... ...11101 */
                            /* ./loongarch.decode.2:551 */
                            info->opc = OPC_ARMMOV_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000e:
                        /* 00000000 00111111 1....... ...11110 */
                        decode_extract_format_55(info, insn);
                        switch ((insn >> 14) & 0x1) {
                        case 0x1:
                            /* 00000000 00111111 11...... ...11110 */
                            /* ./loongarch.decode.2:552 */
                            info->opc = OPC_ARMMOV_D;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000f:
                        /* 00000000 00111111 1....... ...11111 */
                        decode_extract_format_55(info, insn);
                        switch ((insn >> 14) & 0x1) {
                        case 0x1:
                            /* 00000000 00111111 11...... ...11111 */
                            /* ./loongarch.decode.2:553 */
                            info->opc = OPC_ARMRRX_W;
                            return true;
                            break;
                        }
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        case 0x1:
            /* 00000000 01...... ........ ........ */
            switch ((insn >> 21) & 0x1) {
            case 0x0:
                /* 00000000 010..... ........ ........ */
                switch ((insn >> 18) & 0x7) {
                case 0x0:
                    /* 00000000 010000.. ........ ........ */
                    switch ((insn >> 16) & 0x3) {
                    case 0x0:
                        /* 00000000 01000000 ........ ........ */
                        decode_extract_format_6(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01000000 1....... ........ */
                            /* ./loongarch.decode.2:132 */
                            info->opc = OPC_SLLI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 00000000 01000001 ........ ........ */
                        /* ./loongarch.decode.2:133 */
                        decode_extract_format_7(info, insn);
                        info->opc = OPC_SLLI_D;
                        return true;
                        break;
                    }
                    break;
                case 0x1:
                    /* 00000000 010001.. ........ ........ */
                    switch ((insn >> 16) & 0x3) {
                    case 0x0:
                        /* 00000000 01000100 ........ ........ */
                        decode_extract_format_6(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01000100 1....... ........ */
                            /* ./loongarch.decode.2:134 */
                            info->opc = OPC_SRLI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 00000000 01000101 ........ ........ */
                        /* ./loongarch.decode.2:135 */
                        decode_extract_format_7(info, insn);
                        info->opc = OPC_SRLI_D;
                        return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 00000000 010010.. ........ ........ */
                    switch ((insn >> 16) & 0x3) {
                    case 0x0:
                        /* 00000000 01001000 ........ ........ */
                        decode_extract_format_6(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01001000 1....... ........ */
                            /* ./loongarch.decode.2:136 */
                            info->opc = OPC_SRAI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 00000000 01001001 ........ ........ */
                        /* ./loongarch.decode.2:137 */
                        decode_extract_format_7(info, insn);
                        info->opc = OPC_SRAI_D;
                        return true;
                        break;
                    }
                    break;
                case 0x3:
                    /* 00000000 010011.. ........ ........ */
                    switch ((insn >> 16) & 0x3) {
                    case 0x0:
                        /* 00000000 01001100 ........ ........ */
                        switch ((insn >> 15) & 0x1) {
                        case 0x0:
                            /* 00000000 01001100 0....... ........ */
                            switch ((insn >> 14) & 0x1) {
                            case 0x0:
                                /* 00000000 01001100 00...... ........ */
                                decode_extract_format_56(info, insn);
                                switch ((insn >> 13) & 0x1) {
                                case 0x1:
                                    /* 00000000 01001100 001..... ........ */
                                    /* ./loongarch.decode.2:554 */
                                    info->opc = OPC_ROTRI_B;
                                    return true;
                                    break;
                                }
                                break;
                            case 0x1:
                                /* 00000000 01001100 01...... ........ */
                                /* ./loongarch.decode.2:555 */
                                decode_extract_format_57(info, insn);
                                info->opc = OPC_ROTRI_H;
                                return true;
                                break;
                            }
                            break;
                        case 0x1:
                            /* 00000000 01001100 1....... ........ */
                            /* ./loongarch.decode.2:138 */
                            decode_extract_format_6(info, insn);
                            info->opc = OPC_ROTRI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 00000000 01001101 ........ ........ */
                        /* ./loongarch.decode.2:139 */
                        decode_extract_format_7(info, insn);
                        info->opc = OPC_ROTRI_D;
                        return true;
                        break;
                    }
                    break;
                case 0x4:
                    /* 00000000 010100.. ........ ........ */
                    switch ((insn >> 16) & 0x3) {
                    case 0x0:
                        /* 00000000 01010000 ........ ........ */
                        switch ((insn >> 15) & 0x1) {
                        case 0x0:
                            /* 00000000 01010000 0....... ........ */
                            switch ((insn >> 14) & 0x1) {
                            case 0x0:
                                /* 00000000 01010000 00...... ........ */
                                decode_extract_format_56(info, insn);
                                switch ((insn >> 13) & 0x1) {
                                case 0x1:
                                    /* 00000000 01010000 001..... ........ */
                                    /* ./loongarch.decode.2:556 */
                                    info->opc = OPC_RCRI_B;
                                    return true;
                                    break;
                                }
                                break;
                            case 0x1:
                                /* 00000000 01010000 01...... ........ */
                                /* ./loongarch.decode.2:557 */
                                decode_extract_format_57(info, insn);
                                info->opc = OPC_RCRI_H;
                                return true;
                                break;
                            }
                            break;
                        case 0x1:
                            /* 00000000 01010000 1....... ........ */
                            /* ./loongarch.decode.2:558 */
                            decode_extract_format_6(info, insn);
                            info->opc = OPC_RCRI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x1:
                        /* 00000000 01010001 ........ ........ */
                        /* ./loongarch.decode.2:559 */
                        decode_extract_format_7(info, insn);
                        info->opc = OPC_RCRI_D;
                        return true;
                        break;
                    }
                    break;
                case 0x5:
                    /* 00000000 010101.. ........ ........ */
                    switch (insn & 0x0003001f) {
                    case 0x00000000:
                        /* 00000000 01010100 ........ ...00000 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...00000 */
                            /* ./loongarch.decode.2:560 */
                            info->opc = OPC_X86SLLI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000001:
                        /* 00000000 01010100 ........ ...00001 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...00001 */
                            /* ./loongarch.decode.2:561 */
                            info->opc = OPC_X86SLLI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000002:
                        /* 00000000 01010100 ........ ...00010 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...00010 */
                            /* ./loongarch.decode.2:562 */
                            info->opc = OPC_X86SLLI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000004:
                        /* 00000000 01010100 ........ ...00100 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...00100 */
                            /* ./loongarch.decode.2:564 */
                            info->opc = OPC_X86SRLI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000005:
                        /* 00000000 01010100 ........ ...00101 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...00101 */
                            /* ./loongarch.decode.2:565 */
                            info->opc = OPC_X86SRLI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000006:
                        /* 00000000 01010100 ........ ...00110 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...00110 */
                            /* ./loongarch.decode.2:566 */
                            info->opc = OPC_X86SRLI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000008:
                        /* 00000000 01010100 ........ ...01000 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...01000 */
                            /* ./loongarch.decode.2:568 */
                            info->opc = OPC_X86SRAI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000009:
                        /* 00000000 01010100 ........ ...01001 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...01001 */
                            /* ./loongarch.decode.2:569 */
                            info->opc = OPC_X86SRAI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000a:
                        /* 00000000 01010100 ........ ...01010 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...01010 */
                            /* ./loongarch.decode.2:570 */
                            info->opc = OPC_X86SRAI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000c:
                        /* 00000000 01010100 ........ ...01100 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...01100 */
                            /* ./loongarch.decode.2:572 */
                            info->opc = OPC_X86ROTRI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000d:
                        /* 00000000 01010100 ........ ...01101 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...01101 */
                            /* ./loongarch.decode.2:573 */
                            info->opc = OPC_X86ROTRI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000000e:
                        /* 00000000 01010100 ........ ...01110 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...01110 */
                            /* ./loongarch.decode.2:574 */
                            info->opc = OPC_X86ROTRI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000010:
                        /* 00000000 01010100 ........ ...10000 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...10000 */
                            /* ./loongarch.decode.2:576 */
                            info->opc = OPC_X86RCRI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000011:
                        /* 00000000 01010100 ........ ...10001 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...10001 */
                            /* ./loongarch.decode.2:577 */
                            info->opc = OPC_X86RCRI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000012:
                        /* 00000000 01010100 ........ ...10010 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...10010 */
                            /* ./loongarch.decode.2:578 */
                            info->opc = OPC_X86RCRI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000014:
                        /* 00000000 01010100 ........ ...10100 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...10100 */
                            /* ./loongarch.decode.2:580 */
                            info->opc = OPC_X86ROTLI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000015:
                        /* 00000000 01010100 ........ ...10101 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...10101 */
                            /* ./loongarch.decode.2:581 */
                            info->opc = OPC_X86ROTLI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000016:
                        /* 00000000 01010100 ........ ...10110 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...10110 */
                            /* ./loongarch.decode.2:582 */
                            info->opc = OPC_X86ROTLI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000018:
                        /* 00000000 01010100 ........ ...11000 */
                        decode_extract_format_58(info, insn);
                        switch ((insn >> 13) & 0x7) {
                        case 0x1:
                            /* 00000000 01010100 001..... ...11000 */
                            /* ./loongarch.decode.2:584 */
                            info->opc = OPC_X86RCLI_B;
                            return true;
                            break;
                        }
                        break;
                    case 0x00000019:
                        /* 00000000 01010100 ........ ...11001 */
                        decode_extract_format_59(info, insn);
                        switch ((insn >> 14) & 0x3) {
                        case 0x1:
                            /* 00000000 01010100 01...... ...11001 */
                            /* ./loongarch.decode.2:585 */
                            info->opc = OPC_X86RCLI_H;
                            return true;
                            break;
                        }
                        break;
                    case 0x0000001a:
                        /* 00000000 01010100 ........ ...11010 */
                        decode_extract_format_60(info, insn);
                        switch ((insn >> 15) & 0x1) {
                        case 0x1:
                            /* 00000000 01010100 1....... ...11010 */
                            /* ./loongarch.decode.2:586 */
                            info->opc = OPC_X86RCLI_W;
                            return true;
                            break;
                        }
                        break;
                    case 0x00010003:
                        /* 00000000 01010101 ........ ...00011 */
                        /* ./loongarch.decode.2:563 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86SLLI_D;
                        return true;
                        break;
                    case 0x00010007:
                        /* 00000000 01010101 ........ ...00111 */
                        /* ./loongarch.decode.2:567 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86SRLI_D;
                        return true;
                        break;
                    case 0x0001000b:
                        /* 00000000 01010101 ........ ...01011 */
                        /* ./loongarch.decode.2:571 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86SRAI_D;
                        return true;
                        break;
                    case 0x0001000f:
                        /* 00000000 01010101 ........ ...01111 */
                        /* ./loongarch.decode.2:575 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86ROTRI_D;
                        return true;
                        break;
                    case 0x00010013:
                        /* 00000000 01010101 ........ ...10011 */
                        /* ./loongarch.decode.2:579 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86RCRI_D;
                        return true;
                        break;
                    case 0x00010017:
                        /* 00000000 01010101 ........ ...10111 */
                        /* ./loongarch.decode.2:583 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86ROTLI_D;
                        return true;
                        break;
                    case 0x0001001b:
                        /* 00000000 01010101 ........ ...11011 */
                        /* ./loongarch.decode.2:587 */
                        decode_extract_format_61(info, insn);
                        info->opc = OPC_X86RCLI_D;
                        return true;
                        break;
                    }
                    break;
                case 0x6:
                    /* 00000000 010110.. ........ ........ */
                    /* ./loongarch.decode.2:588 */
                    decode_extract_format_62(info, insn);
                    info->opc = OPC_X86SETTAG;
                    return true;
                    break;
                case 0x7:
                    /* 00000000 010111.. ........ ........ */
                    decode_extract_format_63(info, insn);
                    switch ((insn >> 5) & 0x1f) {
                    case 0x0:
                        /* 00000000 010111.. ......00 000..... */
                        /* ./loongarch.decode.2:589 */
                        info->opc = OPC_X86MFFLAG;
                        return true;
                        break;
                    case 0x1:
                        /* 00000000 010111.. ......00 001..... */
                        /* ./loongarch.decode.2:590 */
                        info->opc = OPC_X86MTFLAG;
                        return true;
                        break;
                    case 0x2:
                        /* 00000000 010111.. ......00 010..... */
                        /* ./loongarch.decode.2:591 */
                        info->opc = OPC_ARMMFFLAG;
                        return true;
                        break;
                    case 0x3:
                        /* 00000000 010111.. ......00 011..... */
                        /* ./loongarch.decode.2:592 */
                        info->opc = OPC_ARMMTFLAG;
                        return true;
                        break;
                    }
                    break;
                }
                break;
            case 0x1:
                /* 00000000 011..... ........ ........ */
                decode_extract_format_8(info, insn);
                switch ((insn >> 15) & 0x1) {
                case 0x0:
                    /* 00000000 011..... 0....... ........ */
                    /* ./loongarch.decode.2:140 */
                    info->opc = OPC_BSTRINS_W;
                    return true;
                    break;
                case 0x1:
                    /* 00000000 011..... 1....... ........ */
                    /* ./loongarch.decode.2:141 */
                    info->opc = OPC_BSTRPICK_W;
                    return true;
                    break;
                }
                break;
            }
            break;
        case 0x2:
            /* 00000000 10...... ........ ........ */
            /* ./loongarch.decode.2:142 */
            decode_extract_format_9(info, insn);
            info->opc = OPC_BSTRINS_D;
            return true;
            break;
        case 0x3:
            /* 00000000 11...... ........ ........ */
            /* ./loongarch.decode.2:143 */
            decode_extract_format_9(info, insn);
            info->opc = OPC_BSTRPICK_D;
            return true;
            break;
        case 0x4:
            /* 00000001 00...... ........ ........ */
            switch ((insn >> 15) & 0x7f) {
            case 0x1:
                /* 00000001 00000000 1....... ........ */
                /* ./loongarch.decode.2:144 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FADD_S;
                return true;
                break;
            case 0x2:
                /* 00000001 00000001 0....... ........ */
                /* ./loongarch.decode.2:145 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FADD_D;
                return true;
                break;
            case 0x5:
                /* 00000001 00000010 1....... ........ */
                /* ./loongarch.decode.2:146 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FSUB_S;
                return true;
                break;
            case 0x6:
                /* 00000001 00000011 0....... ........ */
                /* ./loongarch.decode.2:147 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FSUB_D;
                return true;
                break;
            case 0x9:
                /* 00000001 00000100 1....... ........ */
                /* ./loongarch.decode.2:148 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMUL_S;
                return true;
                break;
            case 0xa:
                /* 00000001 00000101 0....... ........ */
                /* ./loongarch.decode.2:149 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMUL_D;
                return true;
                break;
            case 0xd:
                /* 00000001 00000110 1....... ........ */
                /* ./loongarch.decode.2:150 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FDIV_S;
                return true;
                break;
            case 0xe:
                /* 00000001 00000111 0....... ........ */
                /* ./loongarch.decode.2:151 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FDIV_D;
                return true;
                break;
            case 0x11:
                /* 00000001 00001000 1....... ........ */
                /* ./loongarch.decode.2:152 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMAX_S;
                return true;
                break;
            case 0x12:
                /* 00000001 00001001 0....... ........ */
                /* ./loongarch.decode.2:153 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMAX_D;
                return true;
                break;
            case 0x15:
                /* 00000001 00001010 1....... ........ */
                /* ./loongarch.decode.2:154 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMIN_S;
                return true;
                break;
            case 0x16:
                /* 00000001 00001011 0....... ........ */
                /* ./loongarch.decode.2:155 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMIN_D;
                return true;
                break;
            case 0x19:
                /* 00000001 00001100 1....... ........ */
                /* ./loongarch.decode.2:156 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMAXA_S;
                return true;
                break;
            case 0x1a:
                /* 00000001 00001101 0....... ........ */
                /* ./loongarch.decode.2:157 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMAXA_D;
                return true;
                break;
            case 0x1d:
                /* 00000001 00001110 1....... ........ */
                /* ./loongarch.decode.2:158 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMINA_S;
                return true;
                break;
            case 0x1e:
                /* 00000001 00001111 0....... ........ */
                /* ./loongarch.decode.2:159 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FMINA_D;
                return true;
                break;
            case 0x21:
                /* 00000001 00010000 1....... ........ */
                /* ./loongarch.decode.2:160 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FSCALEB_S;
                return true;
                break;
            case 0x22:
                /* 00000001 00010001 0....... ........ */
                /* ./loongarch.decode.2:161 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FSCALEB_D;
                return true;
                break;
            case 0x25:
                /* 00000001 00010010 1....... ........ */
                /* ./loongarch.decode.2:162 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FCOPYSIGN_S;
                return true;
                break;
            case 0x26:
                /* 00000001 00010011 0....... ........ */
                /* ./loongarch.decode.2:163 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FCOPYSIGN_D;
                return true;
                break;
            case 0x28:
                /* 00000001 00010100 0....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x1:
                    /* 00000001 00010100 000001.. ........ */
                    /* ./loongarch.decode.2:164 */
                    info->opc = OPC_FABS_S;
                    return true;
                    break;
                case 0x2:
                    /* 00000001 00010100 000010.. ........ */
                    /* ./loongarch.decode.2:165 */
                    info->opc = OPC_FABS_D;
                    return true;
                    break;
                case 0x5:
                    /* 00000001 00010100 000101.. ........ */
                    /* ./loongarch.decode.2:166 */
                    info->opc = OPC_FNEG_S;
                    return true;
                    break;
                case 0x6:
                    /* 00000001 00010100 000110.. ........ */
                    /* ./loongarch.decode.2:167 */
                    info->opc = OPC_FNEG_D;
                    return true;
                    break;
                case 0x9:
                    /* 00000001 00010100 001001.. ........ */
                    /* ./loongarch.decode.2:168 */
                    info->opc = OPC_FLOGB_S;
                    return true;
                    break;
                case 0xa:
                    /* 00000001 00010100 001010.. ........ */
                    /* ./loongarch.decode.2:169 */
                    info->opc = OPC_FLOGB_D;
                    return true;
                    break;
                case 0xd:
                    /* 00000001 00010100 001101.. ........ */
                    /* ./loongarch.decode.2:170 */
                    info->opc = OPC_FCLASS_S;
                    return true;
                    break;
                case 0xe:
                    /* 00000001 00010100 001110.. ........ */
                    /* ./loongarch.decode.2:171 */
                    info->opc = OPC_FCLASS_D;
                    return true;
                    break;
                case 0x11:
                    /* 00000001 00010100 010001.. ........ */
                    /* ./loongarch.decode.2:172 */
                    info->opc = OPC_FSQRT_S;
                    return true;
                    break;
                case 0x12:
                    /* 00000001 00010100 010010.. ........ */
                    /* ./loongarch.decode.2:173 */
                    info->opc = OPC_FSQRT_D;
                    return true;
                    break;
                case 0x15:
                    /* 00000001 00010100 010101.. ........ */
                    /* ./loongarch.decode.2:174 */
                    info->opc = OPC_FRECIP_S;
                    return true;
                    break;
                case 0x16:
                    /* 00000001 00010100 010110.. ........ */
                    /* ./loongarch.decode.2:175 */
                    info->opc = OPC_FRECIP_D;
                    return true;
                    break;
                case 0x19:
                    /* 00000001 00010100 011001.. ........ */
                    /* ./loongarch.decode.2:176 */
                    info->opc = OPC_FRSQRT_S;
                    return true;
                    break;
                case 0x1a:
                    /* 00000001 00010100 011010.. ........ */
                    /* ./loongarch.decode.2:177 */
                    info->opc = OPC_FRSQRT_D;
                    return true;
                    break;
                }
                break;
            case 0x29:
                /* 00000001 00010100 1....... ........ */
                switch ((insn >> 10) & 0x1f) {
                case 0x5:
                    /* 00000001 00010100 100101.. ........ */
                    /* ./loongarch.decode.2:178 */
                    decode_extract_format_11(info, insn);
                    info->opc = OPC_FMOV_S;
                    return true;
                    break;
                case 0x6:
                    /* 00000001 00010100 100110.. ........ */
                    /* ./loongarch.decode.2:179 */
                    decode_extract_format_11(info, insn);
                    info->opc = OPC_FMOV_D;
                    return true;
                    break;
                case 0x9:
                    /* 00000001 00010100 101001.. ........ */
                    /* ./loongarch.decode.2:180 */
                    decode_extract_format_12(info, insn);
                    info->opc = OPC_MOVGR2FR_W;
                    return true;
                    break;
                case 0xa:
                    /* 00000001 00010100 101010.. ........ */
                    /* ./loongarch.decode.2:181 */
                    decode_extract_format_12(info, insn);
                    info->opc = OPC_MOVGR2FR_D;
                    return true;
                    break;
                case 0xb:
                    /* 00000001 00010100 101011.. ........ */
                    /* ./loongarch.decode.2:182 */
                    decode_extract_format_12(info, insn);
                    info->opc = OPC_MOVGR2FRH_W;
                    return true;
                    break;
                case 0xd:
                    /* 00000001 00010100 101101.. ........ */
                    /* ./loongarch.decode.2:183 */
                    decode_extract_format_13(info, insn);
                    info->opc = OPC_MOVFR2GR_S;
                    return true;
                    break;
                case 0xe:
                    /* 00000001 00010100 101110.. ........ */
                    /* ./loongarch.decode.2:184 */
                    decode_extract_format_13(info, insn);
                    info->opc = OPC_MOVFR2GR_D;
                    return true;
                    break;
                case 0xf:
                    /* 00000001 00010100 101111.. ........ */
                    /* ./loongarch.decode.2:185 */
                    decode_extract_format_13(info, insn);
                    info->opc = OPC_MOVFRH2GR_S;
                    return true;
                    break;
                case 0x10:
                    /* 00000001 00010100 110000.. ........ */
                    /* ./loongarch.decode.2:186 */
                    decode_extract_format_14(info, insn);
                    info->opc = OPC_MOVGR2FCSR;
                    return true;
                    break;
                case 0x12:
                    /* 00000001 00010100 110010.. ........ */
                    /* ./loongarch.decode.2:187 */
                    decode_extract_format_15(info, insn);
                    info->opc = OPC_MOVFCSR2GR;
                    return true;
                    break;
                case 0x14:
                    /* 00000001 00010100 110100.. ........ */
                    decode_extract_format_16(info, insn);
                    switch ((insn >> 3) & 0x3) {
                    case 0x0:
                        /* 00000001 00010100 110100.. ...00... */
                        /* ./loongarch.decode.2:188 */
                        info->opc = OPC_MOVFR2CF;
                        return true;
                        break;
                    }
                    break;
                case 0x15:
                    /* 00000001 00010100 110101.. ........ */
                    decode_extract_format_17(info, insn);
                    switch ((insn >> 8) & 0x3) {
                    case 0x0:
                        /* 00000001 00010100 11010100 ........ */
                        /* ./loongarch.decode.2:189 */
                        info->opc = OPC_MOVCF2FR;
                        return true;
                        break;
                    }
                    break;
                case 0x16:
                    /* 00000001 00010100 110110.. ........ */
                    decode_extract_format_18(info, insn);
                    switch ((insn >> 3) & 0x3) {
                    case 0x0:
                        /* 00000001 00010100 110110.. ...00... */
                        /* ./loongarch.decode.2:190 */
                        info->opc = OPC_MOVGR2CF;
                        return true;
                        break;
                    }
                    break;
                case 0x17:
                    /* 00000001 00010100 110111.. ........ */
                    decode_extract_format_19(info, insn);
                    switch ((insn >> 8) & 0x3) {
                    case 0x0:
                        /* 00000001 00010100 11011100 ........ */
                        /* ./loongarch.decode.2:191 */
                        info->opc = OPC_MOVCF2GR;
                        return true;
                        break;
                    }
                    break;
                case 0x18:
                    /* 00000001 00010100 111000.. ........ */
                    /* ./loongarch.decode.2:593 */
                    decode_extract_format_11(info, insn);
                    info->opc = OPC_FCVT_LD_D;
                    return true;
                    break;
                case 0x19:
                    /* 00000001 00010100 111001.. ........ */
                    /* ./loongarch.decode.2:594 */
                    decode_extract_format_11(info, insn);
                    info->opc = OPC_FCVT_UD_D;
                    return true;
                    break;
                }
                break;
            case 0x2a:
                /* 00000001 00010101 0....... ........ */
                /* ./loongarch.decode.2:595 */
                decode_extract_format_10(info, insn);
                info->opc = OPC_FCVT_D_LC;
                return true;
                break;
            case 0x32:
                /* 00000001 00011001 0....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x6:
                    /* 00000001 00011001 000110.. ........ */
                    /* ./loongarch.decode.2:192 */
                    info->opc = OPC_FCVT_S_D;
                    return true;
                    break;
                case 0x9:
                    /* 00000001 00011001 001001.. ........ */
                    /* ./loongarch.decode.2:193 */
                    info->opc = OPC_FCVT_D_S;
                    return true;
                    break;
                }
                break;
            case 0x34:
                /* 00000001 00011010 0....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x1:
                    /* 00000001 00011010 000001.. ........ */
                    /* ./loongarch.decode.2:194 */
                    info->opc = OPC_FTINTRM_W_S;
                    return true;
                    break;
                case 0x2:
                    /* 00000001 00011010 000010.. ........ */
                    /* ./loongarch.decode.2:195 */
                    info->opc = OPC_FTINTRM_W_D;
                    return true;
                    break;
                case 0x9:
                    /* 00000001 00011010 001001.. ........ */
                    /* ./loongarch.decode.2:196 */
                    info->opc = OPC_FTINTRM_L_S;
                    return true;
                    break;
                case 0xa:
                    /* 00000001 00011010 001010.. ........ */
                    /* ./loongarch.decode.2:197 */
                    info->opc = OPC_FTINTRM_L_D;
                    return true;
                    break;
                case 0x11:
                    /* 00000001 00011010 010001.. ........ */
                    /* ./loongarch.decode.2:198 */
                    info->opc = OPC_FTINTRP_W_S;
                    return true;
                    break;
                case 0x12:
                    /* 00000001 00011010 010010.. ........ */
                    /* ./loongarch.decode.2:199 */
                    info->opc = OPC_FTINTRP_W_D;
                    return true;
                    break;
                case 0x19:
                    /* 00000001 00011010 011001.. ........ */
                    /* ./loongarch.decode.2:200 */
                    info->opc = OPC_FTINTRP_L_S;
                    return true;
                    break;
                case 0x1a:
                    /* 00000001 00011010 011010.. ........ */
                    /* ./loongarch.decode.2:201 */
                    info->opc = OPC_FTINTRP_L_D;
                    return true;
                    break;
                }
                break;
            case 0x35:
                /* 00000001 00011010 1....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x1:
                    /* 00000001 00011010 100001.. ........ */
                    /* ./loongarch.decode.2:202 */
                    info->opc = OPC_FTINTRZ_W_S;
                    return true;
                    break;
                case 0x2:
                    /* 00000001 00011010 100010.. ........ */
                    /* ./loongarch.decode.2:203 */
                    info->opc = OPC_FTINTRZ_W_D;
                    return true;
                    break;
                case 0x9:
                    /* 00000001 00011010 101001.. ........ */
                    /* ./loongarch.decode.2:204 */
                    info->opc = OPC_FTINTRZ_L_S;
                    return true;
                    break;
                case 0xa:
                    /* 00000001 00011010 101010.. ........ */
                    /* ./loongarch.decode.2:205 */
                    info->opc = OPC_FTINTRZ_L_D;
                    return true;
                    break;
                case 0x11:
                    /* 00000001 00011010 110001.. ........ */
                    /* ./loongarch.decode.2:206 */
                    info->opc = OPC_FTINTRNE_W_S;
                    return true;
                    break;
                case 0x12:
                    /* 00000001 00011010 110010.. ........ */
                    /* ./loongarch.decode.2:207 */
                    info->opc = OPC_FTINTRNE_W_D;
                    return true;
                    break;
                case 0x19:
                    /* 00000001 00011010 111001.. ........ */
                    /* ./loongarch.decode.2:208 */
                    info->opc = OPC_FTINTRNE_L_S;
                    return true;
                    break;
                case 0x1a:
                    /* 00000001 00011010 111010.. ........ */
                    /* ./loongarch.decode.2:209 */
                    info->opc = OPC_FTINTRNE_L_D;
                    return true;
                    break;
                }
                break;
            case 0x36:
                /* 00000001 00011011 0....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x1:
                    /* 00000001 00011011 000001.. ........ */
                    /* ./loongarch.decode.2:210 */
                    info->opc = OPC_FTINT_W_S;
                    return true;
                    break;
                case 0x2:
                    /* 00000001 00011011 000010.. ........ */
                    /* ./loongarch.decode.2:211 */
                    info->opc = OPC_FTINT_W_D;
                    return true;
                    break;
                case 0x9:
                    /* 00000001 00011011 001001.. ........ */
                    /* ./loongarch.decode.2:212 */
                    info->opc = OPC_FTINT_L_S;
                    return true;
                    break;
                case 0xa:
                    /* 00000001 00011011 001010.. ........ */
                    /* ./loongarch.decode.2:213 */
                    info->opc = OPC_FTINT_L_D;
                    return true;
                    break;
                }
                break;
            case 0x3a:
                /* 00000001 00011101 0....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x4:
                    /* 00000001 00011101 000100.. ........ */
                    /* ./loongarch.decode.2:214 */
                    info->opc = OPC_FFINT_S_W;
                    return true;
                    break;
                case 0x6:
                    /* 00000001 00011101 000110.. ........ */
                    /* ./loongarch.decode.2:215 */
                    info->opc = OPC_FFINT_S_L;
                    return true;
                    break;
                case 0x8:
                    /* 00000001 00011101 001000.. ........ */
                    /* ./loongarch.decode.2:216 */
                    info->opc = OPC_FFINT_D_W;
                    return true;
                    break;
                case 0xa:
                    /* 00000001 00011101 001010.. ........ */
                    /* ./loongarch.decode.2:217 */
                    info->opc = OPC_FFINT_D_L;
                    return true;
                    break;
                }
                break;
            case 0x3c:
                /* 00000001 00011110 0....... ........ */
                decode_extract_format_11(info, insn);
                switch ((insn >> 10) & 0x1f) {
                case 0x11:
                    /* 00000001 00011110 010001.. ........ */
                    /* ./loongarch.decode.2:218 */
                    info->opc = OPC_FRINT_S;
                    return true;
                    break;
                case 0x12:
                    /* 00000001 00011110 010010.. ........ */
                    /* ./loongarch.decode.2:219 */
                    info->opc = OPC_FRINT_D;
                    return true;
                    break;
                }
                break;
            }
            break;
        case 0x8:
            /* 00000010 00...... ........ ........ */
            /* ./loongarch.decode.2:220 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_SLTI;
            return true;
            break;
        case 0x9:
            /* 00000010 01...... ........ ........ */
            /* ./loongarch.decode.2:221 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_SLTUI;
            return true;
            break;
        case 0xa:
            /* 00000010 10...... ........ ........ */
            /* ./loongarch.decode.2:222 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_ADDI_W;
            return true;
            break;
        case 0xb:
            /* 00000010 11...... ........ ........ */
            /* ./loongarch.decode.2:223 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_ADDI_D;
            return true;
            break;
        case 0xc:
            /* 00000011 00...... ........ ........ */
            /* ./loongarch.decode.2:224 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LU52I_D;
            return true;
            break;
        case 0xd:
            /* 00000011 01...... ........ ........ */
            /* ./loongarch.decode.2:225 */
            decode_extract_format_21(info, insn);
            info->opc = OPC_ANDI;
            return true;
            break;
        case 0xe:
            /* 00000011 10...... ........ ........ */
            /* ./loongarch.decode.2:226 */
            decode_extract_format_21(info, insn);
            info->opc = OPC_ORI;
            return true;
            break;
        case 0xf:
            /* 00000011 11...... ........ ........ */
            /* ./loongarch.decode.2:227 */
            decode_extract_format_21(info, insn);
            info->opc = OPC_XORI;
            return true;
            break;
        }
        break;
    case 0x1:
        /* 000001.. ........ ........ ........ */
        switch ((insn >> 24) & 0x3) {
        case 0x0:
            /* 00000100 ........ ........ ........ */
            if ((insn & 0x000003e0) == 0x00000000) {
                /* 00000100 ........ ......00 000..... */
                /* ./loongarch.decode.2:229 */
                decode_extract_format_22(info, insn);
                info->opc = OPC_CSRRD;
                return true;
            }
            if ((insn & 0x000003e0) == 0x00000020) {
                /* 00000100 ........ ......00 001..... */
                /* ./loongarch.decode.2:230 */
                decode_extract_format_22(info, insn);
                info->opc = OPC_CSRWR;
                return true;
            }
            /* ./loongarch.decode.2:231 */
            decode_extract_format_23(info, insn);
            info->opc = OPC_CSRXCHG;
            return true;
            break;
        case 0x1:
            /* 00000101 ........ ........ ........ */
            if ((insn & 0x000003e0) == 0x00000000) {
                /* 00000101 ........ ......00 000..... */
                /* ./loongarch.decode.2:597 */
                decode_extract_format_22(info, insn);
                info->opc = OPC_GCSRRD;
                return true;
            }
            if ((insn & 0x000003e0) == 0x00000020) {
                /* 00000101 ........ ......00 001..... */
                /* ./loongarch.decode.2:598 */
                decode_extract_format_22(info, insn);
                info->opc = OPC_GCSRWR;
                return true;
            }
            /* ./loongarch.decode.2:599 */
            decode_extract_format_23(info, insn);
            info->opc = OPC_GCSRXCHG;
            return true;
            break;
        case 0x2:
            /* 00000110 ........ ........ ........ */
            switch ((insn >> 22) & 0x3) {
            case 0x0:
                /* 00000110 00...... ........ ........ */
                /* ./loongarch.decode.2:233 */
                decode_extract_format_24(info, insn);
                info->opc = OPC_CACOP;
                return true;
                break;
            case 0x1:
                /* 00000110 01...... ........ ........ */
                switch ((insn >> 18) & 0xf) {
                case 0x0:
                    /* 00000110 010000.. ........ ........ */
                    /* ./loongarch.decode.2:234 */
                    decode_extract_format_25(info, insn);
                    info->opc = OPC_LDDIR;
                    return true;
                    break;
                case 0x1:
                    /* 00000110 010001.. ........ ........ */
                    decode_extract_format_26(info, insn);
                    switch (insn & 0x0000001f) {
                    case 0x00000000:
                        /* 00000110 010001.. ........ ...00000 */
                        /* ./loongarch.decode.2:235 */
                        info->opc = OPC_LDPTE;
                        return true;
                        break;
                    }
                    break;
                case 0x2:
                    /* 00000110 010010.. ........ ........ */
                    switch ((insn >> 15) & 0x7) {
                    case 0x0:
                        /* 00000110 01001000 0....... ........ */
                        switch ((insn >> 10) & 0x1f) {
                        case 0x0:
                            /* 00000110 01001000 000000.. ........ */
                            /* ./loongarch.decode.2:236 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRRD_B;
                            return true;
                            break;
                        case 0x1:
                            /* 00000110 01001000 000001.. ........ */
                            /* ./loongarch.decode.2:237 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRRD_H;
                            return true;
                            break;
                        case 0x2:
                            /* 00000110 01001000 000010.. ........ */
                            /* ./loongarch.decode.2:238 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRRD_W;
                            return true;
                            break;
                        case 0x3:
                            /* 00000110 01001000 000011.. ........ */
                            /* ./loongarch.decode.2:239 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRRD_D;
                            return true;
                            break;
                        case 0x4:
                            /* 00000110 01001000 000100.. ........ */
                            /* ./loongarch.decode.2:240 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRWR_B;
                            return true;
                            break;
                        case 0x5:
                            /* 00000110 01001000 000101.. ........ */
                            /* ./loongarch.decode.2:241 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRWR_H;
                            return true;
                            break;
                        case 0x6:
                            /* 00000110 01001000 000110.. ........ */
                            /* ./loongarch.decode.2:242 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRWR_W;
                            return true;
                            break;
                        case 0x7:
                            /* 00000110 01001000 000111.. ........ */
                            /* ./loongarch.decode.2:243 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_IOCSRWR_D;
                            return true;
                            break;
                        case 0x8:
                            /* 00000110 01001000 001000.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00100000 00000000 */
                                /* ./loongarch.decode.2:244 */
                                info->opc = OPC_TLBCLR;
                                return true;
                                break;
                            case 0x00000001:
                                /* 00000110 01001000 00100000 00000001 */
                                /* ./loongarch.decode.2:601 */
                                info->opc = OPC_GTLBCLR;
                                return true;
                                break;
                            }
                            break;
                        case 0x9:
                            /* 00000110 01001000 001001.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00100100 00000000 */
                                /* ./loongarch.decode.2:245 */
                                info->opc = OPC_TLBFLUSH;
                                return true;
                                break;
                            case 0x00000001:
                                /* 00000110 01001000 00100100 00000001 */
                                /* ./loongarch.decode.2:602 */
                                info->opc = OPC_GTLBFLUSH;
                                return true;
                                break;
                            }
                            break;
                        case 0xa:
                            /* 00000110 01001000 001010.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00101000 00000000 */
                                /* ./loongarch.decode.2:246 */
                                info->opc = OPC_TLBSRCH;
                                return true;
                                break;
                            case 0x00000001:
                                /* 00000110 01001000 00101000 00000001 */
                                /* ./loongarch.decode.2:603 */
                                info->opc = OPC_GTLBSRCH;
                                return true;
                                break;
                            }
                            break;
                        case 0xb:
                            /* 00000110 01001000 001011.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00101100 00000000 */
                                /* ./loongarch.decode.2:247 */
                                info->opc = OPC_TLBRD;
                                return true;
                                break;
                            case 0x00000001:
                                /* 00000110 01001000 00101100 00000001 */
                                /* ./loongarch.decode.2:604 */
                                info->opc = OPC_GTLBRD;
                                return true;
                                break;
                            }
                            break;
                        case 0xc:
                            /* 00000110 01001000 001100.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00110000 00000000 */
                                /* ./loongarch.decode.2:248 */
                                info->opc = OPC_TLBWR;
                                return true;
                                break;
                            case 0x00000001:
                                /* 00000110 01001000 00110000 00000001 */
                                /* ./loongarch.decode.2:605 */
                                info->opc = OPC_GTLBWR;
                                return true;
                                break;
                            }
                            break;
                        case 0xd:
                            /* 00000110 01001000 001101.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00110100 00000000 */
                                /* ./loongarch.decode.2:249 */
                                info->opc = OPC_TLBFILL;
                                return true;
                                break;
                            case 0x00000001:
                                /* 00000110 01001000 00110100 00000001 */
                                /* ./loongarch.decode.2:606 */
                                info->opc = OPC_GTLBFILL;
                                return true;
                                break;
                            }
                            break;
                        case 0xe:
                            /* 00000110 01001000 001110.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001000 00111000 00000000 */
                                /* ./loongarch.decode.2:250 */
                                info->opc = OPC_ERTN;
                                return true;
                                break;
                            }
                            break;
                        }
                        break;
                    case 0x1:
                        /* 00000110 01001000 1....... ........ */
                        /* ./loongarch.decode.2:251 */
                        decode_extract_format_28(info, insn);
                        info->opc = OPC_IDLE;
                        return true;
                        break;
                    case 0x2:
                        /* 00000110 01001001 0....... ........ */
                        switch ((insn >> 10) & 0x1f) {
                        case 0x8:
                            /* 00000110 01001001 001000.. ........ */
                            /* ./loongarch.decode.2:607 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_SCFGR_W;
                            return true;
                            break;
                        case 0x9:
                            /* 00000110 01001001 001001.. ........ */
                            /* ./loongarch.decode.2:608 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_SCFGR_D;
                            return true;
                            break;
                        case 0xa:
                            /* 00000110 01001001 001010.. ........ */
                            /* ./loongarch.decode.2:609 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_SCFGW_W;
                            return true;
                            break;
                        case 0xb:
                            /* 00000110 01001001 001011.. ........ */
                            /* ./loongarch.decode.2:610 */
                            decode_extract_format_0(info, insn);
                            info->opc = OPC_SCFGW_D;
                            return true;
                            break;
                        case 0xc:
                            /* 00000110 01001001 001100.. ........ */
                            decode_extract_format_27(info, insn);
                            switch (insn & 0x000003ff) {
                            case 0x00000000:
                                /* 00000110 01001001 00110000 00000000 */
                                /* ./loongarch.decode.2:611 */
                                info->opc = OPC_SNOP;
                                return true;
                                break;
                            }
                            break;
                        }
                        break;
                    case 0x3:
                        /* 00000110 01001001 1....... ........ */
                        /* ./loongarch.decode.2:252 */
                        decode_extract_format_29(info, insn);
                        info->opc = OPC_INVTLB;
                        return true;
                        break;
                    }
                    break;
                }
                break;
            }
            break;
        }
        break;
    case 0x2:
        /* 000010.. ........ ........ ........ */
        decode_extract_format_30(info, insn);
        switch ((insn >> 20) & 0x3f) {
        case 0x1:
            /* 00001000 0001.... ........ ........ */
            /* ./loongarch.decode.2:253 */
            info->opc = OPC_FMADD_S;
            return true;
            break;
        case 0x2:
            /* 00001000 0010.... ........ ........ */
            /* ./loongarch.decode.2:254 */
            info->opc = OPC_FMADD_D;
            return true;
            break;
        case 0x5:
            /* 00001000 0101.... ........ ........ */
            /* ./loongarch.decode.2:255 */
            info->opc = OPC_FMSUB_S;
            return true;
            break;
        case 0x6:
            /* 00001000 0110.... ........ ........ */
            /* ./loongarch.decode.2:256 */
            info->opc = OPC_FMSUB_D;
            return true;
            break;
        case 0x9:
            /* 00001000 1001.... ........ ........ */
            /* ./loongarch.decode.2:257 */
            info->opc = OPC_FNMADD_S;
            return true;
            break;
        case 0xa:
            /* 00001000 1010.... ........ ........ */
            /* ./loongarch.decode.2:258 */
            info->opc = OPC_FNMADD_D;
            return true;
            break;
        case 0xd:
            /* 00001000 1101.... ........ ........ */
            /* ./loongarch.decode.2:259 */
            info->opc = OPC_FNMSUB_S;
            return true;
            break;
        case 0xe:
            /* 00001000 1110.... ........ ........ */
            /* ./loongarch.decode.2:260 */
            info->opc = OPC_FNMSUB_D;
            return true;
            break;
        }
        break;
    case 0x3:
        /* 000011.. ........ ........ ........ */
        switch ((insn >> 18) & 0xff) {
        case 0x4:
            /* 00001100 000100.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00010000 0....... ...00... */
                /* ./loongarch.decode.2:261 */
                info->opc = OPC_FCMP_CAF_S;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00010000 1....... ...00... */
                /* ./loongarch.decode.2:262 */
                info->opc = OPC_FCMP_SAF_S;
                return true;
                break;
            case 0x00010000:
                /* 00001100 00010001 0....... ...00... */
                /* ./loongarch.decode.2:263 */
                info->opc = OPC_FCMP_CLT_S;
                return true;
                break;
            case 0x00018000:
                /* 00001100 00010001 1....... ...00... */
                /* ./loongarch.decode.2:264 */
                info->opc = OPC_FCMP_STL_S;
                return true;
                break;
            case 0x00020000:
                /* 00001100 00010010 0....... ...00... */
                /* ./loongarch.decode.2:265 */
                info->opc = OPC_FCMP_CEQ_S;
                return true;
                break;
            case 0x00028000:
                /* 00001100 00010010 1....... ...00... */
                /* ./loongarch.decode.2:266 */
                info->opc = OPC_FCMP_SEQ_S;
                return true;
                break;
            case 0x00030000:
                /* 00001100 00010011 0....... ...00... */
                /* ./loongarch.decode.2:267 */
                info->opc = OPC_FCMP_CLE_S;
                return true;
                break;
            case 0x00038000:
                /* 00001100 00010011 1....... ...00... */
                /* ./loongarch.decode.2:268 */
                info->opc = OPC_FCMP_SLE_S;
                return true;
                break;
            }
            break;
        case 0x5:
            /* 00001100 000101.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00010100 0....... ...00... */
                /* ./loongarch.decode.2:269 */
                info->opc = OPC_FCMP_CUN_S;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00010100 1....... ...00... */
                /* ./loongarch.decode.2:270 */
                info->opc = OPC_FCMP_SUN_S;
                return true;
                break;
            case 0x00010000:
                /* 00001100 00010101 0....... ...00... */
                /* ./loongarch.decode.2:271 */
                info->opc = OPC_FCMP_CULT_S;
                return true;
                break;
            case 0x00018000:
                /* 00001100 00010101 1....... ...00... */
                /* ./loongarch.decode.2:272 */
                info->opc = OPC_FCMP_SULT_S;
                return true;
                break;
            case 0x00020000:
                /* 00001100 00010110 0....... ...00... */
                /* ./loongarch.decode.2:273 */
                info->opc = OPC_FCMP_CUEQ_S;
                return true;
                break;
            case 0x00028000:
                /* 00001100 00010110 1....... ...00... */
                /* ./loongarch.decode.2:274 */
                info->opc = OPC_FCMP_SUEQ_S;
                return true;
                break;
            case 0x00030000:
                /* 00001100 00010111 0....... ...00... */
                /* ./loongarch.decode.2:275 */
                info->opc = OPC_FCMP_CULE_S;
                return true;
                break;
            case 0x00038000:
                /* 00001100 00010111 1....... ...00... */
                /* ./loongarch.decode.2:276 */
                info->opc = OPC_FCMP_SULE_S;
                return true;
                break;
            }
            break;
        case 0x6:
            /* 00001100 000110.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00011000 0....... ...00... */
                /* ./loongarch.decode.2:277 */
                info->opc = OPC_FCMP_CNE_S;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00011000 1....... ...00... */
                /* ./loongarch.decode.2:278 */
                info->opc = OPC_FCMP_SNE_S;
                return true;
                break;
            case 0x00020000:
                /* 00001100 00011010 0....... ...00... */
                /* ./loongarch.decode.2:279 */
                info->opc = OPC_FCMP_COR_S;
                return true;
                break;
            case 0x00028000:
                /* 00001100 00011010 1....... ...00... */
                /* ./loongarch.decode.2:280 */
                info->opc = OPC_FCMP_SOR_S;
                return true;
                break;
            }
            break;
        case 0x7:
            /* 00001100 000111.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00011100 0....... ...00... */
                /* ./loongarch.decode.2:281 */
                info->opc = OPC_FCMP_CUNE_S;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00011100 1....... ...00... */
                /* ./loongarch.decode.2:282 */
                info->opc = OPC_FCMP_SUNE_S;
                return true;
                break;
            }
            break;
        case 0x8:
            /* 00001100 001000.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00100000 0....... ...00... */
                /* ./loongarch.decode.2:283 */
                info->opc = OPC_FCMP_CAF_D;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00100000 1....... ...00... */
                /* ./loongarch.decode.2:284 */
                info->opc = OPC_FCMP_SAF_D;
                return true;
                break;
            case 0x00010000:
                /* 00001100 00100001 0....... ...00... */
                /* ./loongarch.decode.2:285 */
                info->opc = OPC_FCMP_CLT_D;
                return true;
                break;
            case 0x00018000:
                /* 00001100 00100001 1....... ...00... */
                /* ./loongarch.decode.2:286 */
                info->opc = OPC_FCMP_STL_D;
                return true;
                break;
            case 0x00020000:
                /* 00001100 00100010 0....... ...00... */
                /* ./loongarch.decode.2:287 */
                info->opc = OPC_FCMP_CEQ_D;
                return true;
                break;
            case 0x00028000:
                /* 00001100 00100010 1....... ...00... */
                /* ./loongarch.decode.2:288 */
                info->opc = OPC_FCMP_SEQ_D;
                return true;
                break;
            case 0x00030000:
                /* 00001100 00100011 0....... ...00... */
                /* ./loongarch.decode.2:289 */
                info->opc = OPC_FCMP_CLE_D;
                return true;
                break;
            case 0x00038000:
                /* 00001100 00100011 1....... ...00... */
                /* ./loongarch.decode.2:290 */
                info->opc = OPC_FCMP_SLE_D;
                return true;
                break;
            }
            break;
        case 0x9:
            /* 00001100 001001.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00100100 0....... ...00... */
                /* ./loongarch.decode.2:291 */
                info->opc = OPC_FCMP_CUN_D;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00100100 1....... ...00... */
                /* ./loongarch.decode.2:292 */
                info->opc = OPC_FCMP_SUN_D;
                return true;
                break;
            case 0x00010000:
                /* 00001100 00100101 0....... ...00... */
                /* ./loongarch.decode.2:293 */
                info->opc = OPC_FCMP_CULT_D;
                return true;
                break;
            case 0x00018000:
                /* 00001100 00100101 1....... ...00... */
                /* ./loongarch.decode.2:294 */
                info->opc = OPC_FCMP_SULT_D;
                return true;
                break;
            case 0x00020000:
                /* 00001100 00100110 0....... ...00... */
                /* ./loongarch.decode.2:295 */
                info->opc = OPC_FCMP_CUEQ_D;
                return true;
                break;
            case 0x00028000:
                /* 00001100 00100110 1....... ...00... */
                /* ./loongarch.decode.2:296 */
                info->opc = OPC_FCMP_SUEQ_D;
                return true;
                break;
            case 0x00030000:
                /* 00001100 00100111 0....... ...00... */
                /* ./loongarch.decode.2:297 */
                info->opc = OPC_FCMP_CULE_D;
                return true;
                break;
            case 0x00038000:
                /* 00001100 00100111 1....... ...00... */
                /* ./loongarch.decode.2:298 */
                info->opc = OPC_FCMP_SULE_D;
                return true;
                break;
            }
            break;
        case 0xa:
            /* 00001100 001010.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00101000 0....... ...00... */
                /* ./loongarch.decode.2:299 */
                info->opc = OPC_FCMP_CNE_D;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00101000 1....... ...00... */
                /* ./loongarch.decode.2:300 */
                info->opc = OPC_FCMP_SNE_D;
                return true;
                break;
            case 0x00020000:
                /* 00001100 00101010 0....... ...00... */
                /* ./loongarch.decode.2:301 */
                info->opc = OPC_FCMP_COR_D;
                return true;
                break;
            case 0x00028000:
                /* 00001100 00101010 1....... ...00... */
                /* ./loongarch.decode.2:302 */
                info->opc = OPC_FCMP_SOR_D;
                return true;
                break;
            }
            break;
        case 0xb:
            /* 00001100 001011.. ........ ........ */
            decode_extract_format_31(info, insn);
            switch (insn & 0x00038018) {
            case 0x00000000:
                /* 00001100 00101100 0....... ...00... */
                /* ./loongarch.decode.2:303 */
                info->opc = OPC_FCMP_CUNE_D;
                return true;
                break;
            case 0x00008000:
                /* 00001100 00101100 1....... ...00... */
                /* ./loongarch.decode.2:304 */
                info->opc = OPC_FCMP_SUNE_D;
                return true;
                break;
            }
            break;
        case 0x40:
            /* 00001101 000000.. ........ ........ */
            /* ./loongarch.decode.2:305 */
            decode_extract_format_32(info, insn);
            info->opc = OPC_FSEL;
            return true;
            break;
        }
        break;
    case 0x4:
        /* 000100.. ........ ........ ........ */
        /* ./loongarch.decode.2:306 */
        decode_extract_format_33(info, insn);
        info->opc = OPC_ADDU16I_D;
        return true;
        break;
    case 0x5:
        /* 000101.. ........ ........ ........ */
        decode_extract_format_34(info, insn);
        switch ((insn >> 25) & 0x1) {
        case 0x0:
            /* 0001010. ........ ........ ........ */
            /* ./loongarch.decode.2:307 */
            info->opc = OPC_LU12I_W;
            return true;
            break;
        case 0x1:
            /* 0001011. ........ ........ ........ */
            /* ./loongarch.decode.2:308 */
            info->opc = OPC_LU32I_D;
            return true;
            break;
        }
        break;
    case 0x6:
        /* 000110.. ........ ........ ........ */
        decode_extract_format_34(info, insn);
        switch ((insn >> 25) & 0x1) {
        case 0x0:
            /* 0001100. ........ ........ ........ */
            /* ./loongarch.decode.2:309 */
            info->opc = OPC_PCADDI;
            return true;
            break;
        case 0x1:
            /* 0001101. ........ ........ ........ */
            /* ./loongarch.decode.2:310 */
            info->opc = OPC_PCALAU12I;
            return true;
            break;
        }
        break;
    case 0x7:
        /* 000111.. ........ ........ ........ */
        decode_extract_format_34(info, insn);
        switch ((insn >> 25) & 0x1) {
        case 0x0:
            /* 0001110. ........ ........ ........ */
            /* ./loongarch.decode.2:311 */
            info->opc = OPC_PCADDU12I;
            return true;
            break;
        case 0x1:
            /* 0001111. ........ ........ ........ */
            /* ./loongarch.decode.2:312 */
            info->opc = OPC_PCADDU18I;
            return true;
            break;
        }
        break;
    case 0x8:
        /* 001000.. ........ ........ ........ */
        decode_extract_format_35(info, insn);
        switch ((insn >> 24) & 0x3) {
        case 0x0:
            /* 00100000 ........ ........ ........ */
            /* ./loongarch.decode.2:313 */
            info->opc = OPC_LL_W;
            return true;
            break;
        case 0x1:
            /* 00100001 ........ ........ ........ */
            /* ./loongarch.decode.2:314 */
            info->opc = OPC_SC_W;
            return true;
            break;
        case 0x2:
            /* 00100010 ........ ........ ........ */
            /* ./loongarch.decode.2:315 */
            info->opc = OPC_LL_D;
            return true;
            break;
        case 0x3:
            /* 00100011 ........ ........ ........ */
            /* ./loongarch.decode.2:316 */
            info->opc = OPC_SC_D;
            return true;
            break;
        }
        break;
    case 0x9:
        /* 001001.. ........ ........ ........ */
        decode_extract_format_35(info, insn);
        switch ((insn >> 24) & 0x3) {
        case 0x0:
            /* 00100100 ........ ........ ........ */
            /* ./loongarch.decode.2:317 */
            info->opc = OPC_LDPTR_W;
            return true;
            break;
        case 0x1:
            /* 00100101 ........ ........ ........ */
            /* ./loongarch.decode.2:318 */
            info->opc = OPC_STPTR_W;
            return true;
            break;
        case 0x2:
            /* 00100110 ........ ........ ........ */
            /* ./loongarch.decode.2:319 */
            info->opc = OPC_LDPTR_D;
            return true;
            break;
        case 0x3:
            /* 00100111 ........ ........ ........ */
            /* ./loongarch.decode.2:320 */
            info->opc = OPC_STPTR_D;
            return true;
            break;
        }
        break;
    case 0xa:
        /* 001010.. ........ ........ ........ */
        switch ((insn >> 22) & 0xf) {
        case 0x0:
            /* 00101000 00...... ........ ........ */
            /* ./loongarch.decode.2:321 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_B;
            return true;
            break;
        case 0x1:
            /* 00101000 01...... ........ ........ */
            /* ./loongarch.decode.2:322 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_H;
            return true;
            break;
        case 0x2:
            /* 00101000 10...... ........ ........ */
            /* ./loongarch.decode.2:323 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_W;
            return true;
            break;
        case 0x3:
            /* 00101000 11...... ........ ........ */
            /* ./loongarch.decode.2:324 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_D;
            return true;
            break;
        case 0x4:
            /* 00101001 00...... ........ ........ */
            /* ./loongarch.decode.2:325 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_ST_B;
            return true;
            break;
        case 0x5:
            /* 00101001 01...... ........ ........ */
            /* ./loongarch.decode.2:326 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_ST_H;
            return true;
            break;
        case 0x6:
            /* 00101001 10...... ........ ........ */
            /* ./loongarch.decode.2:327 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_ST_W;
            return true;
            break;
        case 0x7:
            /* 00101001 11...... ........ ........ */
            /* ./loongarch.decode.2:328 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_ST_D;
            return true;
            break;
        case 0x8:
            /* 00101010 00...... ........ ........ */
            /* ./loongarch.decode.2:329 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_BU;
            return true;
            break;
        case 0x9:
            /* 00101010 01...... ........ ........ */
            /* ./loongarch.decode.2:330 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_HU;
            return true;
            break;
        case 0xa:
            /* 00101010 10...... ........ ........ */
            /* ./loongarch.decode.2:331 */
            decode_extract_format_20(info, insn);
            info->opc = OPC_LD_WU;
            return true;
            break;
        case 0xb:
            /* 00101010 11...... ........ ........ */
            /* ./loongarch.decode.2:332 */
            decode_extract_format_36(info, insn);
            info->opc = OPC_PRELD;
            return true;
            break;
        case 0xc:
            /* 00101011 00...... ........ ........ */
            /* ./loongarch.decode.2:333 */
            decode_extract_format_37(info, insn);
            info->opc = OPC_FLD_S;
            return true;
            break;
        case 0xd:
            /* 00101011 01...... ........ ........ */
            /* ./loongarch.decode.2:334 */
            decode_extract_format_37(info, insn);
            info->opc = OPC_FST_S;
            return true;
            break;
        case 0xe:
            /* 00101011 10...... ........ ........ */
            /* ./loongarch.decode.2:335 */
            decode_extract_format_37(info, insn);
            info->opc = OPC_FLD_D;
            return true;
            break;
        case 0xf:
            /* 00101011 11...... ........ ........ */
            /* ./loongarch.decode.2:336 */
            decode_extract_format_37(info, insn);
            info->opc = OPC_FST_D;
            return true;
            break;
        }
        break;
    case 0xb:
        /* 001011.. ........ ........ ........ */
        decode_extract_format_20(info, insn);
        switch ((insn >> 22) & 0xf) {
        case 0x8:
            /* 00101110 00...... ........ ........ */
            /* ./loongarch.decode.2:612 */
            info->opc = OPC_LDL_W;
            return true;
            break;
        case 0x9:
            /* 00101110 01...... ........ ........ */
            /* ./loongarch.decode.2:613 */
            info->opc = OPC_LDR_W;
            return true;
            break;
        case 0xa:
            /* 00101110 10...... ........ ........ */
            /* ./loongarch.decode.2:614 */
            info->opc = OPC_LDL_D;
            return true;
            break;
        case 0xb:
            /* 00101110 11...... ........ ........ */
            /* ./loongarch.decode.2:615 */
            info->opc = OPC_LDR_D;
            return true;
            break;
        case 0xc:
            /* 00101111 00...... ........ ........ */
            /* ./loongarch.decode.2:616 */
            info->opc = OPC_STL_W;
            return true;
            break;
        case 0xd:
            /* 00101111 01...... ........ ........ */
            /* ./loongarch.decode.2:617 */
            info->opc = OPC_STR_W;
            return true;
            break;
        case 0xe:
            /* 00101111 10...... ........ ........ */
            /* ./loongarch.decode.2:618 */
            info->opc = OPC_STL_D;
            return true;
            break;
        case 0xf:
            /* 00101111 11...... ........ ........ */
            /* ./loongarch.decode.2:619 */
            info->opc = OPC_STR_D;
            return true;
            break;
        }
        break;
    case 0xe:
        /* 001110.. ........ ........ ........ */
        switch ((insn >> 15) & 0x7ff) {
        case 0x0:
            /* 00111000 00000000 0....... ........ */
            /* ./loongarch.decode.2:337 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_B;
            return true;
            break;
        case 0x8:
            /* 00111000 00000100 0....... ........ */
            /* ./loongarch.decode.2:338 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_H;
            return true;
            break;
        case 0x10:
            /* 00111000 00001000 0....... ........ */
            /* ./loongarch.decode.2:339 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_W;
            return true;
            break;
        case 0x18:
            /* 00111000 00001100 0....... ........ */
            /* ./loongarch.decode.2:340 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_D;
            return true;
            break;
        case 0x20:
            /* 00111000 00010000 0....... ........ */
            /* ./loongarch.decode.2:341 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STX_B;
            return true;
            break;
        case 0x28:
            /* 00111000 00010100 0....... ........ */
            /* ./loongarch.decode.2:342 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STX_H;
            return true;
            break;
        case 0x30:
            /* 00111000 00011000 0....... ........ */
            /* ./loongarch.decode.2:343 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STX_W;
            return true;
            break;
        case 0x38:
            /* 00111000 00011100 0....... ........ */
            /* ./loongarch.decode.2:344 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STX_D;
            return true;
            break;
        case 0x40:
            /* 00111000 00100000 0....... ........ */
            /* ./loongarch.decode.2:345 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_BU;
            return true;
            break;
        case 0x48:
            /* 00111000 00100100 0....... ........ */
            /* ./loongarch.decode.2:346 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_HU;
            return true;
            break;
        case 0x50:
            /* 00111000 00101000 0....... ........ */
            /* ./loongarch.decode.2:347 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDX_WU;
            return true;
            break;
        case 0x58:
            /* 00111000 00101100 0....... ........ */
            /* ./loongarch.decode.2:348 */
            decode_extract_format_38(info, insn);
            info->opc = OPC_PRELDX;
            return true;
            break;
        case 0x60:
            /* 00111000 00110000 0....... ........ */
            /* ./loongarch.decode.2:349 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FLDX_S;
            return true;
            break;
        case 0x68:
            /* 00111000 00110100 0....... ........ */
            /* ./loongarch.decode.2:350 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FLDX_D;
            return true;
            break;
        case 0x70:
            /* 00111000 00111000 0....... ........ */
            /* ./loongarch.decode.2:351 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FSTX_S;
            return true;
            break;
        case 0x78:
            /* 00111000 00111100 0....... ........ */
            /* ./loongarch.decode.2:352 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FSTX_D;
            return true;
            break;
        case 0xc0:
            /* 00111000 01100000 0....... ........ */
            /* ./loongarch.decode.2:353 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMSWAP_W;
            return true;
            break;
        case 0xc1:
            /* 00111000 01100000 1....... ........ */
            /* ./loongarch.decode.2:354 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMSWAP_D;
            return true;
            break;
        case 0xc2:
            /* 00111000 01100001 0....... ........ */
            /* ./loongarch.decode.2:355 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMADD_W;
            return true;
            break;
        case 0xc3:
            /* 00111000 01100001 1....... ........ */
            /* ./loongarch.decode.2:356 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMADD_D;
            return true;
            break;
        case 0xc4:
            /* 00111000 01100010 0....... ........ */
            /* ./loongarch.decode.2:357 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMAND_W;
            return true;
            break;
        case 0xc5:
            /* 00111000 01100010 1....... ........ */
            /* ./loongarch.decode.2:358 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMAND_D;
            return true;
            break;
        case 0xc6:
            /* 00111000 01100011 0....... ........ */
            /* ./loongarch.decode.2:359 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMOR_W;
            return true;
            break;
        case 0xc7:
            /* 00111000 01100011 1....... ........ */
            /* ./loongarch.decode.2:360 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMOR_D;
            return true;
            break;
        case 0xc8:
            /* 00111000 01100100 0....... ........ */
            /* ./loongarch.decode.2:361 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMXOR_W;
            return true;
            break;
        case 0xc9:
            /* 00111000 01100100 1....... ........ */
            /* ./loongarch.decode.2:362 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMXOR_D;
            return true;
            break;
        case 0xca:
            /* 00111000 01100101 0....... ........ */
            /* ./loongarch.decode.2:363 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_W;
            return true;
            break;
        case 0xcb:
            /* 00111000 01100101 1....... ........ */
            /* ./loongarch.decode.2:364 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_D;
            return true;
            break;
        case 0xcc:
            /* 00111000 01100110 0....... ........ */
            /* ./loongarch.decode.2:365 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_W;
            return true;
            break;
        case 0xcd:
            /* 00111000 01100110 1....... ........ */
            /* ./loongarch.decode.2:366 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_D;
            return true;
            break;
        case 0xce:
            /* 00111000 01100111 0....... ........ */
            /* ./loongarch.decode.2:367 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_WU;
            return true;
            break;
        case 0xcf:
            /* 00111000 01100111 1....... ........ */
            /* ./loongarch.decode.2:368 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_DU;
            return true;
            break;
        case 0xd0:
            /* 00111000 01101000 0....... ........ */
            /* ./loongarch.decode.2:369 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_WU;
            return true;
            break;
        case 0xd1:
            /* 00111000 01101000 1....... ........ */
            /* ./loongarch.decode.2:370 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_DU;
            return true;
            break;
        case 0xd2:
            /* 00111000 01101001 0....... ........ */
            /* ./loongarch.decode.2:371 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMSWAP_DB_W;
            return true;
            break;
        case 0xd3:
            /* 00111000 01101001 1....... ........ */
            /* ./loongarch.decode.2:372 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMSWAP_DB_D;
            return true;
            break;
        case 0xd4:
            /* 00111000 01101010 0....... ........ */
            /* ./loongarch.decode.2:373 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMADD_DB_W;
            return true;
            break;
        case 0xd5:
            /* 00111000 01101010 1....... ........ */
            /* ./loongarch.decode.2:374 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMADD_DB_D;
            return true;
            break;
        case 0xd6:
            /* 00111000 01101011 0....... ........ */
            /* ./loongarch.decode.2:375 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMAND_DB_W;
            return true;
            break;
        case 0xd7:
            /* 00111000 01101011 1....... ........ */
            /* ./loongarch.decode.2:376 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMAND_DB_D;
            return true;
            break;
        case 0xd8:
            /* 00111000 01101100 0....... ........ */
            /* ./loongarch.decode.2:377 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMOR_DB_W;
            return true;
            break;
        case 0xd9:
            /* 00111000 01101100 1....... ........ */
            /* ./loongarch.decode.2:378 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMOR_DB_D;
            return true;
            break;
        case 0xda:
            /* 00111000 01101101 0....... ........ */
            /* ./loongarch.decode.2:379 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMXOR_DB_W;
            return true;
            break;
        case 0xdb:
            /* 00111000 01101101 1....... ........ */
            /* ./loongarch.decode.2:380 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMXOR_DB_D;
            return true;
            break;
        case 0xdc:
            /* 00111000 01101110 0....... ........ */
            /* ./loongarch.decode.2:381 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_DB_W;
            return true;
            break;
        case 0xdd:
            /* 00111000 01101110 1....... ........ */
            /* ./loongarch.decode.2:382 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_DB_D;
            return true;
            break;
        case 0xde:
            /* 00111000 01101111 0....... ........ */
            /* ./loongarch.decode.2:383 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_DB_W;
            return true;
            break;
        case 0xdf:
            /* 00111000 01101111 1....... ........ */
            /* ./loongarch.decode.2:384 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_DB_D;
            return true;
            break;
        case 0xe0:
            /* 00111000 01110000 0....... ........ */
            /* ./loongarch.decode.2:385 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_DB_WU;
            return true;
            break;
        case 0xe1:
            /* 00111000 01110000 1....... ........ */
            /* ./loongarch.decode.2:386 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMAX_DB_DU;
            return true;
            break;
        case 0xe2:
            /* 00111000 01110001 0....... ........ */
            /* ./loongarch.decode.2:387 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_DB_WU;
            return true;
            break;
        case 0xe3:
            /* 00111000 01110001 1....... ........ */
            /* ./loongarch.decode.2:388 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_AMMIN_DB_DU;
            return true;
            break;
        case 0xe4:
            /* 00111000 01110010 0....... ........ */
            /* ./loongarch.decode.2:389 */
            decode_extract_format_40(info, insn);
            info->opc = OPC_DBAR;
            return true;
            break;
        case 0xe5:
            /* 00111000 01110010 1....... ........ */
            /* ./loongarch.decode.2:390 */
            decode_extract_format_41(info, insn);
            info->opc = OPC_IBAR;
            return true;
            break;
        case 0xe8:
            /* 00111000 01110100 0....... ........ */
            /* ./loongarch.decode.2:391 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FLDGT_S;
            return true;
            break;
        case 0xe9:
            /* 00111000 01110100 1....... ........ */
            /* ./loongarch.decode.2:392 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FLDGT_D;
            return true;
            break;
        case 0xea:
            /* 00111000 01110101 0....... ........ */
            /* ./loongarch.decode.2:393 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FLDLE_S;
            return true;
            break;
        case 0xeb:
            /* 00111000 01110101 1....... ........ */
            /* ./loongarch.decode.2:394 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FLDLE_D;
            return true;
            break;
        case 0xec:
            /* 00111000 01110110 0....... ........ */
            /* ./loongarch.decode.2:395 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FSTGT_S;
            return true;
            break;
        case 0xed:
            /* 00111000 01110110 1....... ........ */
            /* ./loongarch.decode.2:396 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FSTGT_D;
            return true;
            break;
        case 0xee:
            /* 00111000 01110111 0....... ........ */
            /* ./loongarch.decode.2:397 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FSTLE_S;
            return true;
            break;
        case 0xef:
            /* 00111000 01110111 1....... ........ */
            /* ./loongarch.decode.2:398 */
            decode_extract_format_39(info, insn);
            info->opc = OPC_FSTLE_D;
            return true;
            break;
        case 0xf0:
            /* 00111000 01111000 0....... ........ */
            /* ./loongarch.decode.2:399 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDGT_B;
            return true;
            break;
        case 0xf1:
            /* 00111000 01111000 1....... ........ */
            /* ./loongarch.decode.2:400 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDGT_H;
            return true;
            break;
        case 0xf2:
            /* 00111000 01111001 0....... ........ */
            /* ./loongarch.decode.2:401 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDGT_W;
            return true;
            break;
        case 0xf3:
            /* 00111000 01111001 1....... ........ */
            /* ./loongarch.decode.2:402 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDGT_D;
            return true;
            break;
        case 0xf4:
            /* 00111000 01111010 0....... ........ */
            /* ./loongarch.decode.2:403 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDLE_B;
            return true;
            break;
        case 0xf5:
            /* 00111000 01111010 1....... ........ */
            /* ./loongarch.decode.2:404 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDLE_H;
            return true;
            break;
        case 0xf6:
            /* 00111000 01111011 0....... ........ */
            /* ./loongarch.decode.2:405 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDLE_W;
            return true;
            break;
        case 0xf7:
            /* 00111000 01111011 1....... ........ */
            /* ./loongarch.decode.2:406 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_LDLE_D;
            return true;
            break;
        case 0xf8:
            /* 00111000 01111100 0....... ........ */
            /* ./loongarch.decode.2:407 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STGT_B;
            return true;
            break;
        case 0xf9:
            /* 00111000 01111100 1....... ........ */
            /* ./loongarch.decode.2:408 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STGT_H;
            return true;
            break;
        case 0xfa:
            /* 00111000 01111101 0....... ........ */
            /* ./loongarch.decode.2:409 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STGT_W;
            return true;
            break;
        case 0xfb:
            /* 00111000 01111101 1....... ........ */
            /* ./loongarch.decode.2:410 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STGT_D;
            return true;
            break;
        case 0xfc:
            /* 00111000 01111110 0....... ........ */
            /* ./loongarch.decode.2:411 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STLE_B;
            return true;
            break;
        case 0xfd:
            /* 00111000 01111110 1....... ........ */
            /* ./loongarch.decode.2:412 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STLE_H;
            return true;
            break;
        case 0xfe:
            /* 00111000 01111111 0....... ........ */
            /* ./loongarch.decode.2:413 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STLE_W;
            return true;
            break;
        case 0xff:
            /* 00111000 01111111 1....... ........ */
            /* ./loongarch.decode.2:414 */
            decode_extract_format_4(info, insn);
            info->opc = OPC_STLE_D;
            return true;
            break;
        }
        break;
    case 0x10:
        /* 010000.. ........ ........ ........ */
        /* ./loongarch.decode.2:415 */
        decode_extract_format_42(info, insn);
        info->opc = OPC_BEQZ;
        return true;
        break;
    case 0x11:
        /* 010001.. ........ ........ ........ */
        /* ./loongarch.decode.2:416 */
        decode_extract_format_42(info, insn);
        info->opc = OPC_BNEZ;
        return true;
        break;
    case 0x12:
        /* 010010.. ........ ........ ........ */
        switch ((insn >> 8) & 0x3) {
        case 0x0:
            /* 010010.. ........ ......00 ........ */
            /* ./loongarch.decode.2:417 */
            decode_extract_format_43(info, insn);
            info->opc = OPC_BCEQZ;
            return true;
            break;
        case 0x1:
            /* 010010.. ........ ......01 ........ */
            /* ./loongarch.decode.2:418 */
            decode_extract_format_43(info, insn);
            info->opc = OPC_BCNEZ;
            return true;
            break;
        case 0x2:
            /* 010010.. ........ ......10 ........ */
            decode_extract_format_64(info, insn);
            switch ((insn >> 5) & 0x7) {
            case 0x0:
                /* 010010.. ........ ......10 000..... */
                /* ./loongarch.decode.2:620 */
                info->opc = OPC_JISCR0;
                return true;
                break;
            }
            break;
        case 0x3:
            /* 010010.. ........ ......11 ........ */
            decode_extract_format_64(info, insn);
            switch ((insn >> 5) & 0x7) {
            case 0x0:
                /* 010010.. ........ ......11 000..... */
                /* ./loongarch.decode.2:621 */
                info->opc = OPC_JISCR1;
                return true;
                break;
            }
            break;
        }
        break;
    case 0x13:
        /* 010011.. ........ ........ ........ */
        /* ./loongarch.decode.2:419 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_JIRL;
        return true;
        break;
    case 0x14:
        /* 010100.. ........ ........ ........ */
        /* ./loongarch.decode.2:420 */
        decode_extract_format_45(info, insn);
        info->opc = OPC_B;
        return true;
        break;
    case 0x15:
        /* 010101.. ........ ........ ........ */
        /* ./loongarch.decode.2:421 */
        decode_extract_format_45(info, insn);
        info->opc = OPC_BL;
        return true;
        break;
    case 0x16:
        /* 010110.. ........ ........ ........ */
        /* ./loongarch.decode.2:422 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_BEQ;
        return true;
        break;
    case 0x17:
        /* 010111.. ........ ........ ........ */
        /* ./loongarch.decode.2:423 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_BNE;
        return true;
        break;
    case 0x18:
        /* 011000.. ........ ........ ........ */
        /* ./loongarch.decode.2:424 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_BLT;
        return true;
        break;
    case 0x19:
        /* 011001.. ........ ........ ........ */
        /* ./loongarch.decode.2:425 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_BGE;
        return true;
        break;
    case 0x1a:
        /* 011010.. ........ ........ ........ */
        /* ./loongarch.decode.2:426 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_BLTU;
        return true;
        break;
    case 0x1b:
        /* 011011.. ........ ........ ........ */
        /* ./loongarch.decode.2:427 */
        decode_extract_format_44(info, insn);
        info->opc = OPC_BGEU;
        return true;
        break;
    }
    return false;
}

void print_format_0(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_1(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_10(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<fpr_name[info->srcs_fregs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_11(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_12(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_13(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_14(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fcsr_name[info->dst_fcsr];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_15(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<fcsr_name[info->srcs_fcsrregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_16(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<cc_name[info->dst_cfreg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_17(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<cc_name[info->srcs_cfregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_18(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<cc_name[info->dst_cfreg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_19(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<cc_name[info->srcs_cfregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_2(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::dec<<info->sa;
out<<" ";
out<<std::endl;
}

void print_format_20(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_21(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<std::endl;
}

void print_format_22(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::dec<<info->csr;
out<<" ";
out<<std::endl;
}

void print_format_23(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->csr;
out<<" ";
out<<std::endl;
}

void print_format_24(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->code_2;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_25(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->level;
out<<" ";
out<<std::endl;
}

void print_format_26(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->seq;
out<<" ";
out<<std::endl;
}

void print_format_27(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::endl;
}

void print_format_28(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->level_3;
out<<" ";
out<<std::endl;
}

void print_format_29(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->op;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_3(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::dec<<info->sa;
out<<" ";
out<<std::endl;
}

void print_format_30(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<fpr_name[info->srcs_fregs[1]] <<" ";
out<<" ";
out<<fpr_name[info->srcs_fregs[2]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_31(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<cc_name[info->dst_cfreg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<fpr_name[info->srcs_fregs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_32(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<fpr_name[info->srcs_fregs[0]] <<" ";
out<<" ";
out<<fpr_name[info->srcs_fregs[1]] <<" ";
out<<" ";
out<<cc_name[info->srcs_cfregs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_33(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_34(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_35(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_36(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->hint;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_37(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<std::endl;
}

void print_format_38(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->hint;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_39(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<fpr_name[info->dst_freg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_4(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_40(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->hint;
out<<" ";
out<<std::endl;
}

void print_format_41(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->hint;
out<<" ";
out<<std::endl;
}

void print_format_42(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->offs;
out<<" ";
out<<std::endl;
}

void print_format_43(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<cc_name[info->srcs_cfregs[0]] <<" ";
out<<" ";
out<<std::dec<<info->offs;
out<<" ";
out<<std::endl;
}

void print_format_44(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->offs;
out<<" ";
out<<std::endl;
}

void print_format_45(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->offs;
out<<" ";
out<<std::endl;
}

void print_format_46(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<scr_name[info->dst_sccrach];
out<<" ";
out<<std::endl;
}

void print_format_47(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<scr_name[info->sccrach_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_48(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ptr;
out<<" ";
out<<std::endl;
}

void print_format_49(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_5(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->code;
out<<" ";
out<<std::endl;
}

void print_format_50(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_51(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->si;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_52(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->cond;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_53(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->cond;
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_54(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->srcs_regs[1]] <<" ";
out<<" ";
out<<std::dec<<info->cond;
out<<" ";
out<<std::endl;
}

void print_format_55(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->cond;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_56(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_57(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_58(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_59(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_6(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<std::endl;
}

void print_format_60(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_61(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::endl;
}

void print_format_62(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<std::dec<<info->op;
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_63(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<std::endl;
}

void print_format_64(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<std::dec<<info->offs;
out<<" ";
out<<std::endl;
}

void print_format_7(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->ui;
out<<" ";
out<<std::endl;
}

void print_format_8(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->msb;
out<<" ";
out<<std::dec<<info->lsb;
out<<" ";
out<<std::endl;
}

void print_format_9(std::ostream& out, LoongArchInsInfo *info)
{
out<<opcode_name[info->opc]<<" ";
out<<gpr_name[info->dst_reg];
out<<" ";
out<<gpr_name[info->srcs_regs[0]] <<" ";
out<<" ";
out<<std::dec<<info->msb;
out<<" ";
out<<std::dec<<info->lsb;
out<<" ";
out<<std::endl;
}

